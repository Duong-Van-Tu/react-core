{"version":3,"file":"reset-password.page-YdviDo1t.js","sources":["../../src/pages/reset-password.page.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Button, Form, Input } from 'antd';\nimport type { FormProps } from 'antd';\nimport { useLocale } from '@/hooks/locale.hook';\nimport { CustomIcon } from '@/components/icons';\nimport { Link } from 'react-router-dom';\n\ntype FieldType = {\n  password: string;\n  confirmPassword: string;\n};\n\nexport default function ResetPasswordPage() {\n  const { formatMessage } = useLocale();\n  const onFinish: FormProps<FieldType>['onFinish'] = (values) => {\n    console.log('Success:', values);\n  };\n\n  const onFinishFailed: FormProps<FieldType>['onFinishFailed'] = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n  return (\n    <div css={formContainerStyle}>\n      <div css={formContentStyle}>\n        <div css={goBackStyle}>\n          <CustomIcon width={12} height={14} type=\"prev\" />\n          <Link css={goBackLinkStyle} to=\"/auth/email-verification\">\n            {formatMessage({ id: 'title.back' })}\n          </Link>\n        </div>\n        <h3 css={resetPasswordTitleStyle}>{formatMessage({ id: 'title.form.resetPassword' })}</h3>\n        <Form\n          name=\"basic\"\n          layout=\"vertical\"\n          initialValues={{ remember: true }}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          autoComplete=\"off\"\n          css={formStyle}\n        >\n          <Form.Item<FieldType>\n            label={\n              <span css={labelFormItem}>{formatMessage({ id: 'form.auth.newPassword' })}</span>\n            }\n            name=\"password\"\n            rules={[\n              { required: true, message: formatMessage({ id: 'form.input.require.newPassword' }) },\n            ]}\n          >\n            <Input.Password\n              size=\"large\"\n              placeholder={formatMessage({ id: 'form.auth.newPasswordConfirm' })}\n            />\n          </Form.Item>\n\n          <Form.Item<FieldType>\n            label={\n              <span css={labelFormItem}>\n                {formatMessage({ id: 'form.auth.newPasswordConfirm' })}\n              </span>\n            }\n            name=\"confirmPassword\"\n            rules={[\n              {\n                required: true,\n                message: formatMessage({ id: 'form.input.require.newPasswordConfirm' }),\n              },\n            ]}\n          >\n            <Input.Password\n              size=\"large\"\n              placeholder={formatMessage({ id: 'form.auth.newPasswordConfirm' })}\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Button size=\"large\" css={submitBtnStyle} type=\"primary\" htmlType=\"submit\">\n              {formatMessage({ id: 'form.action.update' })}\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nconst formContainerStyle = css`\n  display: flex;\n  justify-content: center;\n`;\n\nconst formContentStyle = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  border-radius: 0.8rem;\n  padding: 2rem;\n  box-shadow: 0.04px 0.1px 6px #d9dadb;\n  background: #fff;\n  min-width: 34rem;\n`;\n\nconst labelFormItem = css`\n  font-size: 1.4rem;\n  line-height: 1.6rem;\n  font-weight: 500;\n`;\n\nconst submitBtnStyle = css`\n  margin-top: 2rem;\n  width: 100%;\n  background: #0070b8;\n\n  &:hover {\n    background: #0070b8 !important;\n    opacity: 0.9;\n  }\n`;\n\nconst formStyle = css`\n  margin-top: 2rem;\n  width: 100%;\n`;\n\nconst resetPasswordTitleStyle = css`\n  font-weight: 500;\n  font-size: 2.6rem;\n  line-height: 2.6rem;\n  margin-top: 2rem;\n`;\n\nconst goBackStyle = css`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  margin-bottom: 2rem;\n  gap: 0.3rem;\n  &:hover {\n    svg {\n      path {\n        fill: #1677ff;\n      }\n    }\n  }\n`;\n\nconst goBackLinkStyle = css`\n  font-size: 1.4rem;\n  color: #000;\n`;\n"],"names":["ResetPasswordPage","console","formatMessage","onFinish","values","onFinishFailed","errorInfo","formContainerStyle","formContentStyle","jsxs","id","goBackStyle","jsx","CustomIcon","message","Form","required","process","NODE_ENV","formStyle","labelFormItem","Input","_EMOTION_STRINGIFIED_CSS_ERROR__","Button","submitBtnStyle","name"],"mappings":"8JAKA,SAA2BA,GAAA,CAWvBC,KAAAA,CACF,cAAAC,GAAAA,EAAAA,EAAAC,EAAAC,GAAA,wBAE8EA,CAAA,CAAA,EAE9EC,EAAAC,GAAA,uBAKQA,CAAA,CAAA,EAA8C,SAAA,MAAA,CAE7B,IAAMC,EAGxB,WAAA,MAAsD,CAAA,IAAAC,EAA8B,UAAAC,EAAA,MAAA,CAEnFC,IAAAC,EAE2B,SAAA,CAAAC,EAAAC,EAAA,CAE3B,MAAA,GAIC,OAAA,4BAM4C,GAAA,2BAAwC,SAAAX,EAGlF,CAMH,GAAA,YAAA,CAQI,CAAA,CAAA,CAAA,CAAA,CAEwE,EAAAU,EAAA,KAAA,CAAAE,MAAA,SAAAZ,EAAA,CAAA,GAAA,0BAAA,GAYnD,EAAAO,EAAAM,EAAA,MAG3B,QAIR,OAAA,WAEwBL,cAAA,CAAA,SAAA,EAAAM,EAKFC,SAAAA,EAAAC,eAAAA,EAAA,aAAA,UAAAC,EAAAT,SAAA,CAAAE,EAAAG,EAAA,KAAA,CAAA,QAAA,OAAA,CAYH,IAAAK,EAAA,SAAAlB,EAAA,CAAA,GAAA,uBAAA,CAAA,CAAA,CAAA,EAMC,KAAA,WAAAe,MAAAA,CAAAA,CAAA,SAAA,GAAA,QAAAf,EAAA,CAAA,GAAA,gCAAA,CAAA,CAAA,CAAA,EAAA,SAAAU,EAAAS,EAAA,SAAA,CAAAC,KAAAA,QAAA,YAAApB,EAAA,CAAAe,GAAAA,8BAAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAAL,EAAAG,EAAA,KAAA,CAAA,QAAA,OAAA,CAAA,IAAAK,EAAA,SAAAlB,EAAA,CAAAoB,GAAAA,8BAAAA,CAAA,CAAA,CAgBSL,EAAA,KAAA,kBAAA,MAAA,CAAA,CAAA,SAAA,GAAA,QAAAf,EAAA,CAAA,GAAA,uCAAA,CAAA,CAAA,CAAAoB,EAAA,SAAAV,EAAAS,EAAA,SAAA,CAAAJ,KAAAA,QAAA,YAAAf,EAAA,CAAA,GAAA,8BAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAAU,EAAAG,EAAA,KAAA,CAAA,WAAAQ,EAAA,CAAAD,KAAAA,QAAA,IAAAE,EAuBRP,KAAAA,UAAA,SAAA,SAAA,SAAAf,EAAA,CAAA,GAAA,oBAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAAoB,CAAAA,CAAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAAf,EAAA,CAAA,KAAA,SAAAkB,OAAA,qCAAA"}