{"version":3,"file":"index-TJXhcwbM.js","sources":["../../src/modules/category/enum/relationship-level.enum.ts","../../src/modules/category/services/relationshipLv.service.ts","../../src/modules/category/components/modals/relationship-level/add-relationshipLv.modal.tsx","../../src/modules/category/components/modals/relationship-level/delete-relationshipLv.modal.tsx","../../src/modules/category/components/modals/relationship-level/update-relationshipLv.modal.tsx","../../src/modules/category/components/modals/relationship-level/index.tsx","../../src/modules/category/components/dropdown/relationship-lv.dropdown.tsx","../../src/modules/category/pages/relationship-level/column/relationship-lv.column.tsx","../../src/modules/category/pages/relationship-level/table-relationshipLv.tsx","../../src/modules/category/pages/relationship-level/index.tsx"],"sourcesContent":["export enum ModalRelationshipLevelType {\n  EditRelationLevel = 'Edit RelationLevel',\n  DeleteRelationLevel = 'Delete RelationLevel',\n  AddRelationLevel = 'Add RelationLevel',\n}\n","import { useApi, useCaller } from '@/hooks/api.hook';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  setListRelationshipLvAction,\n  addRelationshipLvAction,\n  updateRelationshipLvAction,\n  deleteRelationshipLvAction,\n} from '../reducers/slicers/relationshipLv.slice';\nimport { useRootSelector } from '@/hooks/selector.hook';\nimport { convertToUppercaseFirstLetter } from '@/utils/get-pathCode';\nimport { Pagination } from '@/constants/pagination';\nimport { generateUrlParams, getTenant } from '@/utils/common';\nimport dayjs from 'dayjs';\n\ntype FilterKPIType = {\n  pageIndex: number;\n  pageSize: number;\n  textSearch?: string;\n  statusId?: string;\n  time?: string;\n  roleType: string;\n};\n\nexport const useRelationshipLv = () => {\n  const api = useApi('');\n  const caller = useCaller();\n  const dispatch = useDispatch();\n  const tenant = getTenant();\n  const user = useRootSelector((state) => state.auth.user);\n\n  const getAllRelationshipLv = useCallback(\n    async ({\n      pageIndex = Pagination.PAGEINDEX,\n      pageSize = Pagination.PAGESIZE,\n      textSearch,\n      statusId,\n      time = dayjs().year().toString(),\n      roleType,\n    }: FilterKPIType) => {\n      const queryParams: { [key: string]: string | undefined } = {\n        PageIndex: pageIndex.toString(),\n        PageSize: pageSize.toString(),\n        UserId: user?.id,\n        RoleId: user?.applicationRoles[0].id,\n        StatusId: statusId,\n        Time: `1-1-${time}`, // value is first day Of year\n        TextSearch: textSearch,\n        tenant: tenant,\n        roleType,\n      };\n\n      const urlParams = generateUrlParams(queryParams);\n\n      const { data, succeeded } = await caller(\n        () => api.post(`/RelationshipLevel/get-list-with-pagination?${urlParams}`),\n        {\n          loadingKey: 'get-relationshipLv',\n        },\n      );\n      if (succeeded) {\n        const { items, totalRecords, pageIndex, totalPages, totalExtend } = data;\n        dispatch(\n          setListRelationshipLvAction({\n            data: items,\n            pagination: {\n              pageIndex,\n              totalRecords,\n              totalPages,\n            },\n            totalExtend,\n          }),\n        );\n      }\n    },\n    [caller, api],\n  );\n\n  const addKRelationshipLv = useCallback(\n    async (values: DataReationshipLevelType) => {\n      const dataAddRelationshipLv = convertToUppercaseFirstLetter({ ...values });\n\n      const { data, succeeded } = await caller(\n        () =>\n          api.post(`/RelationshipLevel/add-or-update?tenant=${tenant}`, [\n            { data: dataAddRelationshipLv },\n          ]),\n        { loadingKey: 'add-realtionshipLv' },\n      );\n\n      if (succeeded) {\n        dispatch(addRelationshipLvAction(data[0]));\n        return succeeded;\n      }\n      return false;\n    },\n\n    [api, caller],\n  );\n\n  const updateRelationshipLv = useCallback(\n    async (values: DataReationshipLevelType) => {\n      const dataUpdateRelationshipLv = convertToUppercaseFirstLetter({ ...values });\n\n      const { data, succeeded } = await caller(\n        () =>\n          api.post(`/RelationshipLevel/add-or-update?tenant=${tenant}`, [\n            { id: values.id, data: dataUpdateRelationshipLv },\n          ]),\n        { loadingKey: 'edit-realtionshipLv' },\n      );\n\n      if (succeeded) {\n        dispatch(updateRelationshipLvAction(data[0]));\n        return succeeded;\n      }\n      return false;\n    },\n\n    [api, caller],\n  );\n\n  const deleteRelationshipLv = useCallback(\n    async (relationshipLvIds: string[]) => {\n      const ids = relationshipLvIds.join(',');\n      const ApplicationUserId = `${user?.id}?tenant=${tenant}`;\n      const { succeeded } = await caller(\n        () => api.del(`/RelationshipLevel/delete-by-ids/${ids}/${ApplicationUserId}`),\n        { loadingKey: 'delete-relationshipLv' },\n      );\n\n      if (succeeded !== null && succeeded) {\n        dispatch(deleteRelationshipLvAction(relationshipLvIds));\n        return true;\n      }\n      return false;\n    },\n\n    [api, caller],\n  );\n\n  return { getAllRelationshipLv, addKRelationshipLv, deleteRelationshipLv, updateRelationshipLv };\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Fragment } from 'react';\nimport { Button, Form, FormProps, Input, Row, Space } from 'antd';\nimport { useWatchLoading } from '@/hooks/loading.hook';\nimport { useRelationshipLv } from '@/modules/category/services/relationshipLv.service';\n\ntype FieldType = {\n  code: string;\n  description: string;\n  pointFrom: number;\n  pointTo: number;\n};\n\ntype AddRelationshipLvProps = {\n  closeModal: () => void;\n};\n\nexport const AddRelationshipLv = ({ closeModal }: AddRelationshipLvProps) => {\n  const [form] = Form.useForm();\n  const { addKRelationshipLv } = useRelationshipLv();\n  const [loading] = useWatchLoading(['add-relationshipLv', false]);\n\n  const onFinish: FormProps<FieldType>['onFinish'] = async (values) => {\n    const dataAddRelationshipLv = {\n      ...values,\n      pointFrom: values.pointFrom.toString(),\n      pointTo: values.pointTo.toString(),\n    };\n    const add = await addKRelationshipLv(dataAddRelationshipLv);\n    if (add) {\n      form.resetFields();\n      closeModal();\n    }\n  };\n\n  const oncancel = () => {\n    closeModal();\n    form.resetFields();\n  };\n\n  return (\n    <Fragment>\n      <h3 css={formTitleStyle}>Thêm mức độ quan hệ</h3>\n      <Form\n        form={form}\n        css={formAddRelationshipLvtyle}\n        name=\"add-customer\"\n        onFinish={onFinish}\n        layout=\"vertical\"\n      >\n        <Form.Item<FieldType>\n          label={<span css={labelFormItem}>Mức độ quan hệ</span>}\n          name=\"code\"\n          rules={[{ required: true, message: 'Vui lòng nhập mức độ quan hệ!' }]}\n        >\n          <Input placeholder=\"Nhập mức độ quan hệ\" />\n        </Form.Item>\n\n        <Form.Item<FieldType>\n          label={<span css={labelFormItem}>Định nghĩa</span>}\n          name=\"description\"\n          rules={[{ required: true, message: 'Vui lòng nhập định nghĩa!' }]}\n        >\n          <Input placeholder=\"Nhập định nghĩa\" />\n        </Form.Item>\n\n        <Form.Item<FieldType>\n          label={<span css={labelFormItem}>Điểm bắt đầu</span>}\n          name=\"pointFrom\"\n          rules={[{ required: true, message: 'Vui lòng nhập điểm bắt đầu!' }]}\n        >\n          <Input placeholder=\"Nhập điểm bắt đầu\" />\n        </Form.Item>\n\n        <Form.Item<FieldType>\n          label={<span css={labelFormItem}>Điểm kết thúc</span>}\n          name=\"pointTo\"\n          rules={[{ required: true, message: 'Vui lòng nhập điểm kết thúc!' }]}\n        >\n          <Input placeholder=\"Nhập điểm kết thúc\" />\n        </Form.Item>\n\n        <Row justify=\"end\">\n          <Space>\n            <Button onClick={oncancel}>Huỷ</Button>\n            <Button loading={loading} type=\"primary\" htmlType=\"submit\">\n              Xác nhận\n            </Button>\n          </Space>\n        </Row>\n      </Form>\n    </Fragment>\n  );\n};\n\nconst formTitleStyle = css`\n  font-weight: 500;\n  font-size: 2rem;\n  line-height: 2.2rem;\n  margin-top: 2rem;\n`;\n\nconst formAddRelationshipLvtyle = css`\n  .ant-form-item-required::before {\n    display: none !important;\n  }\n  margin-top: 2rem;\n  padding: 1rem;\n`;\n\nconst labelFormItem = css`\n  font-size: 1.4rem;\n  line-height: 1.6rem;\n  font-weight: 500;\n`;\n","/** @jsxImportSource @emotion/react */\nimport { useWatchLoading } from '@/hooks/loading.hook';\nimport { useRootSelector } from '@/hooks/selector.hook';\nimport { Pagination } from '@/constants/pagination';\n\nimport { css } from '@emotion/react';\nimport { Button, Row, Space } from 'antd';\nimport { useLocation } from 'react-router-dom';\nimport { useRelationshipLv } from '@/modules/category/services/relationshipLv.service';\ntype DeleteRelationshipLvProps = {\n  closeModal: () => void;\n  data?: DataReationshipLevelType;\n  relationshipLvIds: string[];\n};\nexport const DeleteRelationshipLv = ({\n  closeModal,\n  relationshipLvIds,\n}: DeleteRelationshipLvProps) => {\n  const { deleteRelationshipLv, getAllRelationshipLv } = useRelationshipLv();\n  const pageIndex =\n    useRootSelector((state) => state.category.relationshipLv.pagination?.pageIndex) ?? 0;\n  const [loading] = useWatchLoading(['delete-relationshipLv', false]);\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const tab = searchParams.get('tab');\n  const handledeleteRelationshipLv = async () => {\n    const deleteclient = await deleteRelationshipLv(relationshipLvIds);\n    if (deleteclient) {\n      getAllRelationshipLv({\n        pageIndex: pageIndex || 1,\n        pageSize: Pagination.PAGESIZE,\n        roleType: tab!,\n      });\n\n      closeModal();\n    } else {\n      console.error('Failed to delete relationshipLv');\n    }\n  };\n  return (\n    <div css={rootStyle}>\n      <h3 css={titleStyle}>Đồng ý xoá các mục tiêu đã chọn?</h3>\n      <Row justify=\"center\">\n        <Space>\n          <Button onClick={() => closeModal()}>Huỷ</Button>\n          <Button loading={loading} type=\"primary\" danger onClick={handledeleteRelationshipLv}>\n            Xoá\n          </Button>\n        </Space>\n      </Row>\n    </div>\n  );\n};\n\nconst rootStyle = css`\n  margin-top: 2rem;\n  padding: 0 2rem;\n`;\n\nconst titleStyle = css`\n  font-size: 1.8rem;\n  line-height: 2rem;\n  text-align: center;\n  margin-bottom: 2.4rem;\n  font-weight: 500;\n`;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Fragment, useEffect } from 'react';\nimport { Button, Form, FormProps, Input, Row, Space } from 'antd';\nimport { useWatchLoading } from '@/hooks/loading.hook';\nimport { useRelationshipLv } from '@/modules/category/services/relationshipLv.service';\n\ntype FieldType = {\n  id?: string;\n  code: string;\n  description: string;\n  pointFrom: string;\n  pointTo: string;\n};\n\ntype UpdateReltionshipLvProps = {\n  closeModal: () => void;\n  data: DataReationshipLevelType;\n};\n\nexport const UpdateReltionshipLv = ({ closeModal, data }: UpdateReltionshipLvProps) => {\n  const [form] = Form.useForm();\n  const { updateRelationshipLv } = useRelationshipLv();\n  const [loading] = useWatchLoading(['edit-realtionshipLv', false]);\n\n  const onFinish: FormProps<FieldType>['onFinish'] = async (values) => {\n    const dataUpdateRelationshipLv = {\n      ...values,\n      id: data.id,\n      pointFrom: values.pointFrom.toString(),\n      pointTo: values.pointTo.toString(),\n    };\n    const edit = await updateRelationshipLv(dataUpdateRelationshipLv);\n    if (edit) {\n      form.resetFields();\n      closeModal();\n    }\n  };\n\n  useEffect(() => {\n    form.setFieldsValue(data);\n  }, [data]);\n\n  const oncancel = () => {\n    closeModal();\n  };\n\n  return (\n    <Fragment>\n      <h3 css={formTitleStyle}>Chỉnh sửa mức độ quan hệ</h3>\n      <Form\n        form={form}\n        css={formUpdateRelationshipLvtyle}\n        name=\"add-customer\"\n        onFinish={onFinish}\n        layout=\"vertical\"\n      >\n        <Form.Item<FieldType>\n          label={<span css={labelFormItem}>Mức độ quan hệ</span>}\n          name=\"code\"\n          rules={[{ required: true, message: 'Vui lòng nhập mức độ quan hệ!' }]}\n        >\n          <Input placeholder=\"Nhập mức độ quan hệ\" />\n        </Form.Item>\n\n        <Form.Item<FieldType>\n          label={<span css={labelFormItem}>Định nghĩa</span>}\n          name=\"description\"\n          rules={[{ required: true, message: 'Vui lòng nhập định nghĩa!' }]}\n        >\n          <Input placeholder=\"Nhập định nghĩa\" />\n        </Form.Item>\n\n        <Form.Item<FieldType>\n          label={<span css={labelFormItem}>Điểm bắt đầu</span>}\n          name=\"pointFrom\"\n          rules={[{ required: true, message: 'Vui lòng nhập điểm bắt đầu!' }]}\n        >\n          <Input placeholder=\"Nhập điểm bắt đầu\" />\n        </Form.Item>\n\n        <Form.Item<FieldType>\n          label={<span css={labelFormItem}>Điểm kết thúc</span>}\n          name=\"pointTo\"\n          rules={[{ required: true, message: 'Vui lòng nhập điểm kết thúc!' }]}\n        >\n          <Input placeholder=\"Nhập điểm kết thúc\" />\n        </Form.Item>\n\n        <Row justify=\"end\">\n          <Space>\n            <Button onClick={oncancel}>Huỷ</Button>\n            <Button loading={loading} type=\"primary\" htmlType=\"submit\">\n              Xác nhận\n            </Button>\n          </Space>\n        </Row>\n      </Form>\n    </Fragment>\n  );\n};\n\nconst formTitleStyle = css`\n  font-weight: 500;\n  font-size: 2rem;\n  line-height: 2.2rem;\n  margin-top: 2rem;\n`;\n\nconst formUpdateRelationshipLvtyle = css`\n  .ant-form-item-required::before {\n    display: none !important;\n  }\n  margin-top: 2rem;\n  padding: 1rem;\n`;\n\nconst labelFormItem = css`\n  font-size: 1.4rem;\n  line-height: 1.6rem;\n  font-weight: 500;\n`;\n","import { ModalRelationshipLevelType } from '@/modules/category/enum/relationship-level.enum';\nimport { Modal } from 'antd';\nimport { ReactNode, createContext, useContext, useState } from 'react';\nimport { AddRelationshipLv } from './add-relationshipLv.modal';\nimport { DeleteRelationshipLv } from './delete-relationshipLv.modal';\nimport { UpdateReltionshipLv } from './update-relationshipLv.modal';\n\ntype ModalContexttype = {\n  openModal: (\n    modalName: string,\n    data?: DataReationshipLevelType,\n    relationshipLvIds?: string[],\n  ) => void;\n  closeModal: () => void;\n};\nconst ModalContext = createContext<ModalContexttype | undefined>(undefined);\n\nexport const useModalRelationshipLv = () => {\n  const context = useContext(ModalContext);\n  if (!context) {\n    throw new Error('useModalRelationshipLv must be used within a ModalRelationshipLvProvider');\n  }\n  return context;\n};\n\ntype ModalRelationshipLvProviderProps = {\n  children?: ReactNode;\n};\n\nexport const ModalRelationshipLvProvider = ({ children }: ModalRelationshipLvProviderProps) => {\n  const [currentModal, setCurrentModal] = useState<\n    { modalName: string; data?: DataReationshipLevelType; relationshipLvIds?: string[] } | undefined\n  >();\n  const [open, setOpen] = useState<boolean>(false);\n\n  const openModal = (\n    modalName: string,\n    data?: DataReationshipLevelType,\n    relationshipLvIds?: string[],\n  ) => {\n    setCurrentModal({ modalName, data, relationshipLvIds });\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setCurrentModal(undefined);\n    setOpen(false);\n  };\n\n  return (\n    <ModalContext.Provider value={{ openModal, closeModal }}>\n      {children}\n      <Modal open={open} onCancel={closeModal} footer={null}>\n        {currentModal?.modalName === ModalRelationshipLevelType.EditRelationLevel && (\n          <UpdateReltionshipLv closeModal={closeModal} data={currentModal.data!} />\n        )}\n        {currentModal?.modalName === ModalRelationshipLevelType.DeleteRelationLevel && (\n          <DeleteRelationshipLv\n            closeModal={closeModal}\n            data={currentModal.data!}\n            relationshipLvIds={currentModal.relationshipLvIds!}\n          />\n        )}\n        {currentModal?.modalName === ModalRelationshipLevelType.AddRelationLevel && (\n          <AddRelationshipLv closeModal={closeModal} />\n        )}\n      </Modal>\n    </ModalContext.Provider>\n  );\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Button, Dropdown } from 'antd';\nimport type { MenuProps } from 'antd';\nimport { CustomIcon } from '@/components/icons';\nimport { useLocale } from '@/hooks/locale.hook';\nimport { ModalRelationshipLevelType } from '../../enum/relationship-level.enum';\nimport { useModalRelationshipLv } from '../modals/relationship-level';\n\nenum MenuItem {\n  EditRelationLevel = 1,\n}\n\ntype RelationshipLvDropdownProps = {\n  data?: DataReationshipLevelType;\n};\n\nexport function RelationshipLvDropdown({ data }: RelationshipLvDropdownProps) {\n  const { openModal } = useModalRelationshipLv();\n  const { formatMessage } = useLocale();\n\n  const handleItemClick = (key: number) => {\n    switch (key) {\n      case MenuItem.EditRelationLevel:\n        openModal(ModalRelationshipLevelType.EditRelationLevel, data);\n        break;\n      default:\n        break;\n    }\n  };\n  const items: MenuProps['items'] = [\n    {\n      key: '1',\n      label: <span>{formatMessage({ id: 'dropdown.edit' })}</span>,\n      onClick: () => handleItemClick(MenuItem.EditRelationLevel),\n    },\n  ];\n\n  return (\n    <Dropdown menu={{ items }} placement=\"bottomRight\">\n      <Button css={actionIconBtn}>\n        <CustomIcon type=\"three-dot\" width={16} height={18} />\n      </Button>\n    </Dropdown>\n  );\n}\n\nconst actionIconBtn = css`\n  background: none;\n  border: none;\n  box-shadow: unset;\n  padding: 0;\n`;\n","import { TableProps } from 'antd';\nimport { LocaleFormatter } from '@/components/locale-formatter';\nimport { RelationshipLvDropdown } from '@/modules/category/components/dropdown/relationship-lv.dropdown';\n\ntype ColumnsType<T> = TableProps<T>['columns'];\nexport const relationshipLvColumns: ColumnsType<DataReationshipLevelType> = [\n  {\n    title: <LocaleFormatter id=\"table.column.relationshipLvCode\" />,\n    dataIndex: 'code',\n    render: (code) => code,\n  },\n\n  {\n    title: <LocaleFormatter id=\"table.column.relationshipLvDesc\" />,\n    dataIndex: 'description',\n    render: (description) => description,\n  },\n\n  {\n    title: '',\n    dataIndex: 'calculationMethod',\n    fixed: 'right',\n    width: '6%',\n    render: (__, record) => <RelationshipLvDropdown data={record} />,\n  },\n];\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { TableCustom } from '@/components/table';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Button } from 'antd';\nimport { Search, SearchParams } from '@/components/search';\nimport { CustomIcon } from '@/components/icons';\nimport { useWatchLoading } from '@/hooks/loading.hook';\nimport { Key } from 'antd/es/table/interface';\nimport { Pagination } from '@/constants/pagination';\nimport { useRootSelector } from '@/hooks/selector.hook';\nimport { relationshipLvColumns } from './column/relationship-lv.column';\nimport { useModalRelationshipLv } from '../../components/modals/relationship-level';\nimport { useRelationshipLv } from '../../services/relationshipLv.service';\n\nexport default function TableRelationshipLv() {\n  const [relationshipLvIds, setRelationshipLvIds] = useState<string[]>();\n  const { openModal } = useModalRelationshipLv();\n  const { getAllRelationshipLv } = useRelationshipLv();\n  const [loading] = useWatchLoading(['get-relationshipLv', true]);\n  const { data, pagination } = useRootSelector((state) => state.category.relationshipLv);\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const tab = searchParams.get('tab');\n\n  const handleSearch = ({ textSearch, time }: SearchParams) => {\n    getAllRelationshipLv({\n      pageIndex: pagination?.pageIndex ?? Pagination.PAGEINDEX,\n      pageSize: Pagination.PAGESIZE,\n      textSearch,\n      time,\n      roleType: tab!,\n    });\n  };\n\n  const handleTableChange = (page: number) => {\n    getAllRelationshipLv({\n      pageIndex: page,\n      pageSize: Pagination.PAGESIZE,\n      roleType: tab!,\n    });\n  };\n\n  const rowSelection = {\n    onChange: (_selectedRowKeys: Key[], selectedRows: DataReationshipLevelType[]) => {\n      setRelationshipLvIds(selectedRows.map((row) => row.id!));\n    },\n  };\n\n  const handleDeleteSupplier = () => {\n    openModal('Delete RelationLevel', undefined, relationshipLvIds);\n  };\n\n  useEffect(() => {\n    getAllRelationshipLv({\n      pageIndex: Pagination.PAGEINDEX,\n      pageSize: Pagination.PAGESIZE,\n      roleType: tab!,\n    });\n  }, [getAllRelationshipLv, tab]);\n\n  return (\n    <div css={rootStyle}>\n      <Button\n        onClick={() => openModal('Add RelationLevel')}\n        type=\"primary\"\n        css={addRelationshipLvStyle}\n        iconPosition=\"start\"\n        size=\"large\"\n      >\n        <CustomIcon color=\"#fff\" width={16} height={16} type=\"circle-plus\" />\n        <span>Thêm mức độ quan hệ</span>\n      </Button>\n\n      <div css={searchContainer}>\n        <Search onSearch={handleSearch} />\n      </div>\n      <div css={checkBoxStyle}>\n        <Button\n          disabled={!relationshipLvIds}\n          onClick={() => handleDeleteSupplier()}\n          size=\"large\"\n          danger\n        >\n          Xoá mục tiêu đã chọn\n        </Button>\n      </div>\n      <TableCustom\n        rowSelection={rowSelection}\n        columns={relationshipLvColumns}\n        dataSource={data}\n        loading={loading}\n        rowKey={(record) => record.id}\n        onTableChange={(page) => handleTableChange(page)}\n        pagination={{\n          current: pagination?.pageIndex,\n          pageSize: Pagination.PAGESIZE,\n          total: pagination?.totalRecords,\n          position: ['bottomCenter'],\n        }}\n        scroll={{ x: 1450 }}\n      />\n    </div>\n  );\n}\n\nconst rootStyle = css`\n  position: relative;\n`;\n\nconst addRelationshipLvStyle = css`\n  position: absolute;\n  right: 0;\n  top: -6.5rem;\n  background: #0070b8;\n  display: flex;\n  align-items: center;\n  gap: 0.2rem;\n  &:hover {\n    background: #0070b8 !important;\n    opacity: 0.9;\n  }\n`;\n\nconst searchContainer = css`\n  margin-top: 2.6rem;\n`;\n\nconst checkBoxStyle = css`\n  margin: 1.1rem 0;\n`;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useEffect } from 'react';\nimport { setBreadcrumbItemsAction } from '@/redux/slicers/breadcrumb.slice';\nimport { useDispatch } from 'react-redux';\nimport { ModalRelationshipLvProvider } from '../../components/modals/relationship-level';\nimport TableRelationshipLv from './table-relationshipLv';\n\nexport default function RelationshipLvPage() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const breadCrumbItems = [\n      {\n        title: {\n          vi_VN: 'Danh mục',\n          en_US: 'Category',\n        },\n      },\n      {\n        title: {\n          vi_VN: 'Mức độ quan hệ',\n          en_US: 'Relationship level',\n        },\n      },\n    ];\n    dispatch(setBreadcrumbItemsAction(breadCrumbItems));\n  }, [dispatch]);\n  return (\n    <ModalRelationshipLvProvider>\n      <h3 css={titleStyle}>Mức độ quan hệ</h3>\n      <TableRelationshipLv />\n    </ModalRelationshipLvProvider>\n  );\n}\nconst titleStyle = css`\n  font-size: 2.4rem;\n  line-height: 2.8rem;\n  font-weight: 600;\n  color: rgba(16, 24, 40, 1);\n  margin-bottom: 0.5rem;\n`;\n"],"names":["ModalRelationshipLevelType","EditRelationLevel","DeleteRelationLevel","AddRelationLevel","useRelationshipLv","api","useApi","caller","useCaller","dispatch","useDispatch","tenant","getTenant","user","useRootSelector","state","auth","getAllRelationshipLv","useCallback","pageIndex","Pagination","PAGEINDEX","pageSize","PAGESIZE","textSearch","statusId","time","dayjs","year","toString","roleType","queryParams","PageIndex","PageSize","UserId","id","RoleId","applicationRoles","StatusId","Time","TextSearch","urlParams","generateUrlParams","data","succeeded","post","loadingKey","items","totalRecords","totalPages","totalExtend","setListRelationshipLvAction","pagination","addKRelationshipLv","values","dataAddRelationshipLv","convertToUppercaseFirstLetter","addRelationshipLvAction","updateRelationshipLv","dataUpdateRelationshipLv","updateRelationshipLvAction","deleteRelationshipLv","relationshipLvIds","ids","join","ApplicationUserId","del","deleteRelationshipLvAction","Row","pointFrom","pointTo","loading","useWatchLoading","onFinish","add","form","closeModal","oncancel","Fragment","jsx","formTitleStyle","jsxs","Form","formAddRelationshipLvtyle","process","_EMOTION_STRINGIFIED_CSS_ERROR__","DeleteRelationshipLv","relationshipLv","searchParams","useLocation","handledeleteRelationshipLv","location","rootStyle","titleStyle","Space","Button","NODE_ENV","tab","console","styles","map","edit","useEffect","formUpdateRelationshipLvtyle","labelFormItem","ModalContext","createContext","context","modalName","setCurrentModal","children","currentModal","useState","setOpen","openModal","MenuItem","formatMessage","handleItemClick","key","label","actionIconBtn","CustomIcon","relationshipLvColumns","title","LocaleFormatter","dataIndex","render","code","description","fixed","width","__","record","RelationshipLvDropdown","TableRelationshipLv","setRelationshipLvIds","URLSearchParams","handleTableChange","onChange","_selectedRowKeys","row","searchContainer","handleSearch","checkBoxStyle","TableCustom","rowSelection","RelationshipLvPage","setBreadcrumbItemsAction","vi_VN","en_US","ModalRelationshipLvProvider","name"],"mappings":"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"}