{"version":3,"file":"list-sale-kit-en2DMGdO.js","sources":["../../src/modules/sales/services/sale-kit.service.ts","../../src/modules/sales/pages/sale-kit/list-sale-kit.tsx"],"sourcesContent":["import { useApi, useCaller } from '@/hooks/api.hook';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  setListSaleKitAction,\n  setListSaleKitActionRole,\n  setListSaleKitRoleAction,\n} from '../reducers/slicers/sale-kit.slice';\nimport { generateUrlParams } from '@/utils/common';\n\nexport type FilterSaleKitType = {\n  id?: string;\n  ids?: string;\n  textSearch?: string;\n  roleType?: string;\n  roleId?: string;\n  tenant?: string;\n  dataUpdate?: DataSaleKitUpdateType;\n  time?: string;\n  applicationUserId?: string;\n  files?: FormData;\n};\nexport const userSaleKit = () => {\n  const api = useApi('');\n  const caller = useCaller();\n  const dispatch = useDispatch();\n\n  const getAllSaleKit = useCallback(\n    async ({ textSearch, tenant, roleType, roleId, time }: FilterSaleKitType) => {\n      const queryParams: { [key: string]: string | undefined } = {\n        TextSearch: textSearch,\n        RoleType: roleType,\n        RoleId: roleId,\n        Time: `1-1-${time}`,\n        tenant: tenant,\n      };\n\n      const urlParams = generateUrlParams(queryParams);\n\n      const { data, succeeded } = await caller(() => api.get(`/SaleKit/get-all?${urlParams}`), {\n        loadingKey: 'get-sale-kit',\n      });\n\n      if (succeeded) {\n        dispatch(\n          setListSaleKitAction({\n            data,\n          }),\n        );\n      }\n    },\n    [caller, api],\n  );\n\n  const getAllSaleKitRole = useCallback(\n    async ({ textSearch, tenant, roleType, roleId }: FilterSaleKitType) => {\n      const queryParams: { [key: string]: string | undefined } = {\n        TextSearch: textSearch,\n        RoleType: roleType,\n        RoleId: roleId,\n        tenant: tenant,\n      };\n\n      const urlParams = generateUrlParams(queryParams);\n\n      const response = await caller(() => api.get(`/ApplicationRoleSaleKit/get-all?${urlParams}`), {\n        loadingKey: 'get-sale-kit-role',\n      });\n\n      if (response) {\n        const { data, succeeded } = response;\n\n        if (succeeded) {\n          dispatch(\n            setListSaleKitActionRole({\n              data,\n            }),\n          );\n        }\n      }\n    },\n    [caller, api],\n  );\n\n  const addSaleKit = useCallback(\n    async ({ tenant, files }: FilterSaleKitType) => {\n      const queryParams: { [key: string]: string | undefined } = {\n        tenant: tenant,\n      };\n\n      const urlParams = generateUrlParams(queryParams);\n\n      const response = await caller(() => api.post(`/SaleKit/add-document?${urlParams}`, files), {\n        loadingKey: 'add-sale-kit',\n      });\n\n      if (response) {\n        getAllSaleKit({});\n      }\n    },\n\n    [api, caller],\n  );\n\n  const deleteSaleKit = useCallback(\n    async ({ tenant, ids, applicationUserId }: FilterSaleKitType) => {\n      const queryParams: { [key: string]: string | undefined } = {\n        tenant: tenant,\n      };\n\n      const urlParams = generateUrlParams(queryParams);\n\n      const response = await caller(\n        () => api.del(`/SaleKit/delete-by-ids/${ids}/${applicationUserId}?${urlParams}`),\n        { loadingKey: 'delete-sale-kit' },\n      );\n\n      if (response) {\n        getAllSaleKit({});\n      }\n    },\n\n    [api, caller],\n  );\n\n  const updateSaleKitWithRole = useCallback(\n    async ({ tenant, dataUpdate }: FilterSaleKitType) => {\n      const queryParams: { [key: string]: string | undefined } = {\n        tenant: tenant,\n      };\n\n      const urlParams = generateUrlParams(queryParams);\n\n      await caller(() => api.put(`/ApplicationRoleSaleKit/update?${urlParams}`, dataUpdate), {\n        loadingKey: 'update-sale-kit-with-role',\n      });\n    },\n\n    [api, caller],\n  );\n\n  const getAllRoleInSaleKit = useCallback(\n    async ({ textSearch, tenant, roleType }: FilterSaleKitType) => {\n      const queryParams: { [key: string]: string | undefined } = {\n        TextSearch: textSearch,\n        RoleType: roleType,\n        tenant: tenant,\n      };\n\n      const urlParams = generateUrlParams(queryParams);\n\n      const { data, succeeded } = await caller(\n        () => api.get(`/ApplicationRoles/get-all?${urlParams}`),\n        {\n          loadingKey: 'get-all-role',\n        },\n      );\n\n      if (succeeded) {\n        dispatch(\n          setListSaleKitRoleAction({\n            data,\n          }),\n        );\n      }\n    },\n    [caller, api],\n  );\n\n  const downLoadDocument = useCallback(\n    async ({ id, tenant }: FilterSaleKitType) => {\n      const queryParams: { [key: string]: string | undefined } = {\n        id,\n        tenant: tenant,\n      };\n\n      const urlParams = generateUrlParams(queryParams);\n\n      const data = await caller(() => api.get(`/SaleKit/download-document?${urlParams}`), {\n        loadingKey: 'download-sale-kit',\n      });\n\n      return data;\n    },\n    [caller, api],\n  );\n\n  return {\n    getAllSaleKit,\n    downLoadDocument,\n    getAllRoleInSaleKit,\n    getAllSaleKitRole,\n    updateSaleKitWithRole,\n    deleteSaleKit,\n    addSaleKit,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport { Checkbox } from 'antd';\nimport type { CheckboxProps, GetProp } from 'antd';\nimport { useLocale } from '@/hooks/locale.hook';\nimport { DownloadOutlined } from '@ant-design/icons';\nimport { FilterSaleKitType, userSaleKit } from '../../services/sale-kit.service';\nimport { useRootSelector } from '@/hooks/selector.hook';\n\ntype CheckboxValueType = GetProp<typeof Checkbox.Group, 'value'>[number];\n\nconst CheckboxGroup = Checkbox.Group;\n\ntype Props = {\n  isAdmin?: boolean;\n  checkedList: CheckboxValueType[];\n  setCheckedList: (params: CheckboxValueType[]) => void;\n  data?: DataSaleKitType[];\n  dataWithRole?: DataSaleKitRoleType[];\n  downLoadDocument: (params: FilterSaleKitType) => Promise<string>;\n};\n\nconst ListSaleKit = ({\n  isAdmin,\n  checkedList,\n  setCheckedList,\n  data,\n  dataWithRole,\n  downLoadDocument,\n}: Props) => {\n  const { formatMessage } = useLocale();\n\n  const { updateSaleKitWithRole } = userSaleKit();\n  const user = useRootSelector((state) => state.auth.user);\n\n  const [options, setOptions] = useState<\n    {\n      value: string;\n      label: string;\n    }[]\n  >([]);\n\n  useEffect(() => {\n    if (data) {\n      const options = data?.map((it: DataSaleKitType) => ({\n        value: it.id,\n        label: it.name,\n      }));\n\n      setOptions(options);\n      return;\n    }\n\n    if (dataWithRole) {\n      const checkedList: string[] = [];\n      const options = dataWithRole?.map((it: DataSaleKitRoleType) => {\n        if (it.access) {\n          checkedList.push(it.id);\n        }\n        return {\n          value: it.id,\n          label: it.fileName,\n        };\n      });\n\n      setCheckedList(checkedList);\n      setOptions(options);\n    }\n  }, [data, dataWithRole]);\n\n  const checkAll = options.length === checkedList.length;\n  const indeterminate = checkedList.length > 0 && checkedList.length < options.length;\n\n  const onChange = async (list: CheckboxValueType[]) => {\n    if (dataWithRole && dataWithRole.length > 0) {\n      const newData = dataWithRole.map((item) => {\n        if (list.includes(item.id)) {\n          return { ...item, access: true };\n        } else {\n          return { ...item, access: false };\n        }\n      });\n\n      await updateSaleKitWithRole({\n        dataUpdate: { data: newData, lastModifiedApplicationUserId: user?.id! },\n      });\n    }\n\n    setCheckedList(list);\n  };\n\n  const onCheckAllChange: CheckboxProps['onChange'] = (e) => {\n    setCheckedList(e.target.checked ? options.map((option) => option.value) : []);\n  };\n\n  const base64DecToArr = (strBase64: string, nBlockSize: number) => {\n    var sB64Enc = strBase64.replace(/[^A-Za-z0-9\\+\\/]/g, ''),\n      nInLen = sB64Enc.length,\n      nOutLen = nBlockSize\n        ? Math.ceil(((nInLen * 3 + 1) >> 2) / nBlockSize) * nBlockSize\n        : (nInLen * 3 + 1) >> 2,\n      taBytes = new Uint8Array(nOutLen);\n\n    for (var nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {\n      nMod4 = nInIdx & 3;\n      nUint24 |= parseInt(sB64Enc.charAt(nInIdx), 64) << (18 - 6 * nMod4);\n      if (nMod4 === 3 || nInLen - nInIdx === 1) {\n        for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nUint24 >>= 8) {\n          taBytes[nOutIdx++] = nUint24 >>> 16;\n        }\n        nUint24 = 0;\n      }\n    }\n    return taBytes;\n  };\n\n  const handleDownloadFile = async (id: string, name: string) => {\n    if (!dataWithRole) {\n      const base64Data = await downLoadDocument({ id });\n      const binaryData = base64DecToArr(base64Data.split(',')[1], 0);\n      const blob = new Blob([binaryData], { type: 'application/octet-stream' });\n      const url = URL.createObjectURL(blob);\n\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = name; // Set the file name\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n\n  return (\n    <div\n      style={{\n        margin: '18px 0',\n      }}\n    >\n      {isAdmin && (\n        <Checkbox\n          indeterminate={indeterminate}\n          onChange={onCheckAllChange}\n          checked={checkAll}\n          style={{\n            marginBottom: '16px',\n          }}\n        >\n          <p\n            style={{\n              fontSize: '16px',\n              color: '#8993A4',\n            }}\n          >\n            {formatMessage({ id: 'table.column.saleKit.selectAll' })}\n          </p>\n        </Checkbox>\n      )}\n      {isAdmin ? (\n        <CheckboxGroup\n          style={{ display: 'flex', flexDirection: 'column', gap: '32px' }}\n          value={checkedList}\n          onChange={onChange}\n        >\n          {options.map((option) => (\n            <Checkbox key={option.value} value={option.value}>\n              <a\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '6px',\n                  fontSize: '18px',\n                  textDecoration: 'underline',\n                }}\n                href={'#'}\n                onClick={() => handleDownloadFile(option.value, option.label)}\n              >\n                <DownloadOutlined />\n                {option.label}\n              </a>\n            </Checkbox>\n          ))}\n        </CheckboxGroup>\n      ) : (\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '32px',\n          }}\n        >\n          {options.map((option) => (\n            <span key={option.value}>\n              <a\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '6px',\n                  fontSize: '18px',\n                  textDecoration: 'underline',\n                }}\n                href={'#'}\n                onClick={() => handleDownloadFile(option.value, option.label)}\n              >\n                <DownloadOutlined />\n                {option.label}\n              </a>\n            </span>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ListSaleKit;\n"],"names":["userSaleKit","api","useApi","caller","useCaller","dispatch","useDispatch","getAllSaleKit","useCallback","textSearch","tenant","roleType","roleId","time","queryParams","TextSearch","RoleType","RoleId","Time","urlParams","generateUrlParams","data","succeeded","get","loadingKey","setListSaleKitAction","getAllSaleKitRole","response","setListSaleKitActionRole","addSaleKit","files","post","deleteSaleKit","ids","applicationUserId","del","updateSaleKitWithRole","dataUpdate","put","getAllRoleInSaleKit","setListSaleKitRoleAction","downLoadDocument","id","CheckboxGroup","Checkbox","checkedList","isAdmin","useEffect","dataWithRole","formatMessage","user","useRootSelector","state","fileName","options2","it","setCheckedList","setOptions","checkAll","onChange","newData","list","options","checkedList2","item","value","length","indeterminate","map","e","base64DecToArr","sB64Enc","replace","nMod3","nMod4","nInIdx","onCheckAllChange","option","handleDownloadFile","strBase64","nBlockSize","body","url","link","name","nOutIdx","nOutLen","nUint24","taBytes","base64Data","binaryData","blob","flexDirection","alignItems","click","removeChild","marginBottom","jsx","ListSaleKit"],"mappings":"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"}