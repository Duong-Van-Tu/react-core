{"version":3,"file":"index-Ba8ytxh2.js","sources":["../../src/modules/category/enum/contract.enum.ts","../../src/modules/category/services/contract.service.ts","../../src/modules/category/components/modals/contract/add-contract.modal.tsx","../../src/modules/category/components/modals/contract/delete-contract.modal.tsx","../../src/modules/category/components/modals/contract/update-contract.modal.tsx","../../src/modules/category/components/modals/contract/index.tsx","../../src/modules/category/components/dropdown/contract.dropdown.tsx","../../src/modules/category/pages/contract/column/contract.column.tsx","../../src/modules/category/pages/contract/table-contract.tsx","../../src/modules/category/pages/contract/index.tsx"],"sourcesContent":["export enum ModalContractType {\n  EditContract = 'Edit Contract',\n  DeleteContract = 'Delete Contract',\n  AddContract = 'Add Contract',\n}\n","import { useApi, useCaller } from '@/hooks/api.hook';\nimport { useCallback } from 'react';\nimport {\n  addContractAction,\n  deleteContractAction,\n  setAllContractAction,\n  setListContractAction,\n  updateContractAction,\n} from '../reducers/slicers/contract.slice';\nimport { useDispatch } from 'react-redux';\nimport { useRootSelector } from '@/hooks/selector.hook';\nimport { convertToUppercaseFirstLetter } from '@/utils/get-pathCode';\nimport { Pagination } from '@/constants/pagination';\nimport { generateUrlParams, getTenant } from '@/utils/common';\nimport dayjs from 'dayjs';\n\ntype FilterKPIType = {\n  pageIndex: number;\n  pageSize: number;\n  textSearch?: string;\n  statusId?: string;\n  time?: string;\n  roleType: string;\n};\n\nexport const useContract = () => {\n  const api = useApi('');\n  const caller = useCaller();\n  const dispatch = useDispatch();\n  const tenant = getTenant();\n  const user = useRootSelector((state) => state.auth.user);\n\n  const getAllContract = useCallback(\n    async ({\n      pageIndex = Pagination.PAGEINDEX,\n      pageSize = Pagination.PAGESIZE,\n      textSearch,\n      statusId,\n      time = dayjs().year().toString(),\n      roleType,\n    }: FilterKPIType) => {\n      const queryParams: { [key: string]: string | undefined } = {\n        PageIndex: pageIndex.toString(),\n        PageSize: pageSize.toString(),\n        UserId: user?.id,\n        RoleId: user?.applicationRoles[0].id,\n        StatusId: statusId,\n        Time: `1-1-${time}`, // value is first day Of year\n        TextSearch: textSearch,\n        tenant: tenant,\n        roleType,\n      };\n\n      const urlParams = generateUrlParams(queryParams);\n\n      const { data, succeeded } = await caller(\n        () => api.post(`/Contract/get-list-with-pagination?${urlParams}`),\n        {\n          loadingKey: 'get-contract',\n        },\n      );\n      if (succeeded) {\n        const { items, totalRecords, pageIndex, totalPages, totalExtend } = data;\n        dispatch(\n          setListContractAction({\n            data: items,\n            pagination: {\n              pageIndex,\n              totalRecords,\n              totalPages,\n            },\n            totalExtend,\n          }),\n        );\n      }\n    },\n    [caller, api],\n  );\n\n  const addKContract = useCallback(\n    async (values: DataContractType) => {\n      const dataAddContract = convertToUppercaseFirstLetter({\n        ...values,\n      });\n\n      const { data, succeeded } = await caller(\n        () => api.post(`/Contract/add-or-update?tenant=${tenant}`, [{ data: dataAddContract }]),\n        { loadingKey: 'add-contract' },\n      );\n\n      if (succeeded) {\n        dispatch(addContractAction(data[0]));\n        return succeeded;\n      }\n      return false;\n    },\n\n    [api, caller],\n  );\n\n  const deleteContract = useCallback(\n    async (contractIds: string[]) => {\n      const ids = contractIds.join(',');\n      const ApplicationUserId = `${user?.id}?tenant=${tenant}`;\n      const { succeeded } = await caller(\n        () => api.del(`/Contract/delete-by-ids/${ids}/${ApplicationUserId}`),\n        { loadingKey: 'delete-contract' },\n      );\n\n      if (succeeded !== null && succeeded) {\n        dispatch(deleteContractAction(contractIds));\n        return true;\n      }\n      return false;\n    },\n\n    [api, caller],\n  );\n\n  const updateContract = useCallback(\n    async (values: DataContractType) => {\n      const dataUpdateContract = convertToUppercaseFirstLetter({ ...values });\n\n      const { data, succeeded } = await caller(\n        () =>\n          api.post(`/Contract/add-or-update?tenant=${tenant}`, [\n            { id: values.id, data: dataUpdateContract },\n          ]),\n        { loadingKey: 'edit-contract' },\n      );\n      console.log('data: ', data);\n\n      if (succeeded) {\n        dispatch(updateContractAction(data[0]));\n        return succeeded;\n      }\n      return false;\n    },\n\n    [api, caller],\n  );\n\n  const getAllCustomerContract = useCallback(async () => {\n    const queryParams: { [key: string]: string | undefined } = {\n      UserId: user?.id,\n      RoleId: user?.applicationRoles[0].id,\n      tenant: tenant,\n    };\n\n    const urlParams = generateUrlParams(queryParams);\n\n    const { data, succeeded } = await caller(() => api.get(`/Customer/get-all?${urlParams}`), {\n      loadingKey: 'get-customer',\n    });\n\n    if (succeeded) {\n      dispatch(setAllContractAction({ dataCustomer: data }));\n    }\n  }, [caller, api, dispatch, user, tenant]);\n\n  return { getAllContract, addKContract, deleteContract, updateContract, getAllCustomerContract };\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Fragment, useEffect } from 'react';\nimport { Button, Col, DatePicker, Form, FormProps, Input, Row, Space, Select } from 'antd';\nimport dayjs from 'dayjs';\nimport { useWatchLoading } from '@/hooks/loading.hook';\nimport { useContract } from '@/modules/category/services/contract.service';\nimport { useRootSelector } from '@/hooks/selector.hook';\n\ntype FieldType = {\n  code: string;\n  name: string;\n  number: string;\n  startDate: string;\n  endDate: string;\n  customerId: string;\n};\n\ntype AddContractProps = {\n  closeModal: () => void;\n};\n\nexport const AddContract = ({ closeModal }: AddContractProps) => {\n  const [form] = Form.useForm();\n  const { addKContract, getAllCustomerContract } = useContract();\n  const [loading] = useWatchLoading(['add-contract', false]);\n  const { dataCustomer } = useRootSelector((state) => state.category.contract);\n  const onFinish: FormProps<FieldType>['onFinish'] = async (values) => {\n    const dataAddContract = {\n      ...values,\n      customerId: values.customerId.toString(),\n      startDate: dayjs(values.startDate).format('DD/MM/YYYY'),\n      endDate: dayjs(values.endDate).format('DD/MM/YYYY'),\n    };\n    const add = await addKContract(dataAddContract);\n    if (add) {\n      form.resetFields();\n      closeModal();\n    }\n  };\n\n  const oncancel = () => {\n    closeModal();\n    form.resetFields();\n  };\n\n  useEffect(() => {\n    getAllCustomerContract();\n  }, [getAllCustomerContract]);\n\n  const options = dataCustomer.map((item, index) => ({\n    label: item.code,\n    value: item.id,\n    key: index,\n  }));\n\n  return (\n    <Fragment>\n      <h3 css={formTitleStyle}>Thêm hợp đồng</h3>\n      <Form\n        form={form}\n        css={formAddContractStyle}\n        name=\"add-customer\"\n        onFinish={onFinish}\n        layout=\"vertical\"\n      >\n        <Row gutter={[20, 0]}>\n          <Col span={12}>\n            <Form.Item<FieldType>\n              label={<span css={labelFormItem}>Mã HD</span>}\n              name=\"code\"\n              rules={[{ required: true, message: 'Vui lòng nhập mã KH!' }]}\n            >\n              <Input placeholder=\"Nhập mã KH\" />\n            </Form.Item>\n          </Col>\n          <Col span={12}>\n            <Form.Item<FieldType>\n              label={<span css={labelFormItem}>Số HD</span>}\n              name=\"number\"\n              rules={[{ required: true, message: 'Vui lòng nhập tên khách hàng!' }]}\n            >\n              <Input placeholder=\"Nhập tên khách hàng\" />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Form.Item<FieldType>\n          label={<span css={labelFormItem}>Mã HD</span>}\n          name=\"name\"\n          rules={[{ required: true, message: 'Vui lòng nhập mã KH!' }]}\n        >\n          <Input placeholder=\"Nhập mã KH\" />\n        </Form.Item>\n\n        <Row gutter={[20, 0]}>\n          <Col span={12}>\n            <Form.Item<FieldType>\n              label={<span css={labelFormItem}>Ngày bắt đầu</span>}\n              name=\"startDate\"\n              rules={[{ required: true, message: 'Vui lòng nhập ngày bắt đầu !' }]}\n            >\n              <DatePicker\n                css={inputStyle}\n                format={['DD/MM/YYYY']}\n                placeholder=\"Nhập ngày bắt đầu\"\n              />\n            </Form.Item>\n          </Col>\n          <Col span={12}>\n            <Form.Item<FieldType>\n              label={<span css={labelFormItem}>Ngày kết thúc</span>}\n              name=\"endDate\"\n              rules={[{ required: true, message: 'Vui lòng chọn ngày kết thúc!' }]}\n            >\n              <DatePicker\n                css={inputStyle}\n                format={['DD/MM/YYYY']}\n                placeholder=\"Chọn ngày kết thúc\"\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Form.Item<FieldType>\n          label={<span css={labelFormItem}>Mã KH</span>}\n          name=\"customerId\"\n          rules={[{ required: true, message: 'Vui lòng nhập mã KH!' }]}\n        >\n          <Select options={options} css={inputStyle} placeholder=\"Chọn khách hàng\" />\n        </Form.Item>\n\n        <Row justify=\"end\">\n          <Space>\n            <Button onClick={oncancel}>Huỷ</Button>\n            <Button loading={loading} type=\"primary\" htmlType=\"submit\">\n              Xác nhận\n            </Button>\n          </Space>\n        </Row>\n      </Form>\n    </Fragment>\n  );\n};\n\nconst formTitleStyle = css`\n  font-weight: 500;\n  font-size: 2rem;\n  line-height: 2.2rem;\n  margin-top: 2rem;\n`;\n\nconst formAddContractStyle = css`\n  .ant-form-item-required::before {\n    display: none !important;\n  }\n  margin-top: 2rem;\n  padding: 1rem;\n`;\n\nconst labelFormItem = css`\n  font-size: 1.4rem;\n  line-height: 1.6rem;\n  font-weight: 500;\n`;\n\nconst inputStyle = css`\n  width: 100%;\n`;\n","/** @jsxImportSource @emotion/react */\nimport { useWatchLoading } from '@/hooks/loading.hook';\nimport { useRootSelector } from '@/hooks/selector.hook';\nimport { Pagination } from '@/constants/pagination';\nimport { css } from '@emotion/react';\nimport { Button, Row, Space } from 'antd';\nimport { useLocation } from 'react-router-dom';\nimport { useContract } from '@/modules/category/services/contract.service';\ntype DeleteContractProps = {\n  closeModal: () => void;\n  data?: DataContractType;\n  contractIds: string[];\n};\nexport const DeleteContract = ({ closeModal, contractIds }: DeleteContractProps) => {\n  const { deleteContract, getAllContract } = useContract();\n  const pageIndex = useRootSelector((state) => state.category.customer.pagination?.pageIndex) ?? 0;\n  const [loading] = useWatchLoading(['delete-contract', false]);\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const tab = searchParams.get('tab');\n  const handleDeleteContract = async () => {\n    const deleteclient = await deleteContract(contractIds);\n    if (deleteclient) {\n      getAllContract({\n        pageIndex: pageIndex || 1,\n        pageSize: Pagination.PAGESIZE,\n        roleType: tab!,\n      });\n\n      closeModal();\n    } else {\n      console.error('Failed to delete contract');\n    }\n  };\n  return (\n    <div css={rootStyle}>\n      <h3 css={titleStyle}>Đồng ý xoá các mục tiêu đã chọn?</h3>\n      <Row justify=\"center\">\n        <Space>\n          <Button onClick={() => closeModal()}>Huỷ</Button>\n          <Button loading={loading} type=\"primary\" danger onClick={handleDeleteContract}>\n            Xoá\n          </Button>\n        </Space>\n      </Row>\n    </div>\n  );\n};\n\nconst rootStyle = css`\n  margin-top: 2rem;\n  padding: 0 2rem;\n`;\n\nconst titleStyle = css`\n  font-size: 1.8rem;\n  line-height: 2rem;\n  text-align: center;\n  margin-bottom: 2.4rem;\n  font-weight: 500;\n`;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Fragment, useEffect } from 'react';\nimport { Button, Col, DatePicker, Form, FormProps, Input, Row, Space, Select } from 'antd';\nimport dayjs from 'dayjs';\nimport { useWatchLoading } from '@/hooks/loading.hook';\nimport { useContract } from '@/modules/category/services/contract.service';\nimport { useRootSelector } from '@/hooks/selector.hook';\n\ntype FieldType = {\n  id?: string;\n  code: string;\n  name: string;\n  number: string;\n  startDate: string;\n  endDate: string;\n  customerId: string;\n};\n\ntype UpdateContractProps = {\n  closeModal: () => void;\n  data: DataContractType;\n};\n\nexport const UpdateContract = ({ closeModal, data }: UpdateContractProps) => {\n  const [form] = Form.useForm();\n  const { updateContract, getAllCustomerContract } = useContract();\n  const [loading] = useWatchLoading(['edit-contract', false]);\n  const { dataCustomer } = useRootSelector((state) => state.category.contract);\n  const onFinish: FormProps<FieldType>['onFinish'] = async (values) => {\n    const dataUpdateContract = {\n      ...values,\n      id: data.id,\n      customerId: values.customerId.toString(),\n      startDate: dayjs(values.startDate).format('DD/MM/YYYY'),\n      endDate: dayjs(values.endDate).format('DD/MM/YYYY'),\n    };\n    console.log('dataUpdateContract: ', dataUpdateContract);\n    const edit = await updateContract(dataUpdateContract);\n    if (edit) {\n      form.resetFields();\n      closeModal();\n    }\n  };\n\n  const oncancel = () => {\n    closeModal();\n  };\n\n  useEffect(() => {\n    getAllCustomerContract();\n  }, [getAllCustomerContract]);\n\n  useEffect(() => {\n    if (data) {\n      form.setFieldsValue({\n        ...data,\n        startDate: dayjs(data.startDate),\n        endDate: dayjs(data.endDate),\n        customerId: data.customer?.code,\n      });\n    }\n  }, [data]);\n\n  const options = dataCustomer.map((item, index) => ({\n    label: item.code,\n    value: item.id,\n    key: index,\n  }));\n\n  return (\n    <Fragment>\n      <h3 css={formTitleStyle}>Chỉnh sửa hợp đồng</h3>\n      <Form\n        form={form}\n        css={formUpdateContractStyle}\n        name=\"add-customer\"\n        onFinish={onFinish}\n        layout=\"vertical\"\n      >\n        <Row gutter={[20, 0]}>\n          <Col span={12}>\n            <Form.Item<FieldType>\n              label={<span css={labelFormItem}>Mã HD</span>}\n              name=\"code\"\n              rules={[{ required: true, message: 'Vui lòng nhập mã KH!' }]}\n            >\n              <Input placeholder=\"Nhập mã KH\" />\n            </Form.Item>\n          </Col>\n          <Col span={12}>\n            <Form.Item<FieldType>\n              label={<span css={labelFormItem}>Số HD</span>}\n              name=\"number\"\n              rules={[{ required: true, message: 'Vui lòng nhập tên khách hàng!' }]}\n            >\n              <Input placeholder=\"Nhập tên khách hàng\" />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Form.Item<FieldType>\n          label={<span css={labelFormItem}>Mã HD</span>}\n          name=\"name\"\n          rules={[{ required: true, message: 'Vui lòng nhập mã KH!' }]}\n        >\n          <Input placeholder=\"Nhập mã KH\" />\n        </Form.Item>\n\n        <Row gutter={[20, 0]}>\n          <Col span={12}>\n            <Form.Item<FieldType>\n              label={<span css={labelFormItem}>Ngày bắt đầu</span>}\n              name=\"startDate\"\n              rules={[{ required: true, message: 'Vui lòng nhập ngày bắt đầu !' }]}\n            >\n              <DatePicker\n                css={inputStyle}\n                format={['DD/MM/YYYY']}\n                placeholder=\"Nhập ngày bắt đầu\"\n              />\n            </Form.Item>\n          </Col>\n          <Col span={12}>\n            <Form.Item<FieldType>\n              label={<span css={labelFormItem}>Ngày kết thúc</span>}\n              name=\"endDate\"\n              rules={[{ required: true, message: 'Vui lòng chọn ngày kết thúc!' }]}\n            >\n              <DatePicker\n                css={inputStyle}\n                format={['DD/MM/YYYY']}\n                placeholder=\"Chọn ngày kết thúc\"\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Form.Item<FieldType>\n          label={<span css={labelFormItem}>Mã KH</span>}\n          name=\"customerId\"\n          rules={[{ required: true, message: 'Vui lòng nhập mã KH!' }]}\n        >\n          <Select options={options} css={inputStyle} placeholder=\"Chọn khách hàng\" />\n        </Form.Item>\n\n        <Row justify=\"end\">\n          <Space>\n            <Button onClick={oncancel}>Huỷ</Button>\n            <Button loading={loading} type=\"primary\" htmlType=\"submit\">\n              Xác nhận\n            </Button>\n          </Space>\n        </Row>\n      </Form>\n    </Fragment>\n  );\n};\n\nconst formTitleStyle = css`\n  font-weight: 500;\n  font-size: 2rem;\n  line-height: 2.2rem;\n  margin-top: 2rem;\n`;\n\nconst formUpdateContractStyle = css`\n  .ant-form-item-required::before {\n    display: none !important;\n  }\n  margin-top: 2rem;\n  padding: 1rem;\n`;\n\nconst labelFormItem = css`\n  font-size: 1.4rem;\n  line-height: 1.6rem;\n  font-weight: 500;\n`;\n\nconst inputStyle = css`\n  width: 100%;\n`;\n","import { ModalContractType } from '@/modules/category/enum/contract.enum';\nimport { Modal } from 'antd';\nimport { ReactNode, createContext, useContext, useState } from 'react';\nimport { AddContract } from './add-contract.modal';\nimport { DeleteContract } from './delete-contract.modal';\nimport { UpdateContract } from './update-contract.modal';\n\ntype ModalContexttype = {\n  openModal: (modalName: string, data?: DataContractType, contractIds?: string[]) => void;\n  closeModal: () => void;\n};\nconst ModalContext = createContext<ModalContexttype | undefined>(undefined);\n\nexport const useModalContract = () => {\n  const context = useContext(ModalContext);\n  if (!context) {\n    throw new Error('useModalContract must be used within a ModalContractProvider');\n  }\n  return context;\n};\n\ntype ModalContractProviderProps = {\n  children?: ReactNode;\n};\n\nexport const ModalContractProvider = ({ children }: ModalContractProviderProps) => {\n  const [currentModal, setCurrentModal] = useState<\n    { modalName: string; data?: DataContractType; contractIds?: string[] } | undefined\n  >();\n  const [open, setOpen] = useState<boolean>(false);\n\n  const openModal = (modalName: string, data?: DataContractType, contractIds?: string[]) => {\n    setCurrentModal({ modalName, data, contractIds });\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setCurrentModal(undefined);\n    setOpen(false);\n  };\n\n  return (\n    <ModalContext.Provider value={{ openModal, closeModal }}>\n      {children}\n      <Modal open={open} onCancel={closeModal} footer={null}>\n        {currentModal?.modalName === ModalContractType.EditContract && (\n          <UpdateContract closeModal={closeModal} data={currentModal.data!} />\n        )}\n        {currentModal?.modalName === ModalContractType.DeleteContract && (\n          <DeleteContract\n            closeModal={closeModal}\n            data={currentModal.data!}\n            contractIds={currentModal.contractIds!}\n          />\n        )}\n        {currentModal?.modalName === ModalContractType.AddContract && (\n          <AddContract closeModal={closeModal} />\n        )}\n      </Modal>\n    </ModalContext.Provider>\n  );\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Button, Dropdown } from 'antd';\nimport type { MenuProps } from 'antd';\nimport { CustomIcon } from '@/components/icons';\nimport { useLocale } from '@/hooks/locale.hook';\nimport { ModalContractType } from '../../enum/contract.enum';\nimport { useModalContract } from '../modals/contract';\n\nenum MenuItem {\n  EditContract = 1,\n}\n\ntype ContractDropdownProps = {\n  data?: DataContractType;\n};\n\nexport function ContractDropdown({ data }: ContractDropdownProps) {\n  const { openModal } = useModalContract();\n  const { formatMessage } = useLocale();\n\n  const handleItemClick = (key: number) => {\n    switch (key) {\n      case MenuItem.EditContract:\n        openModal(ModalContractType.EditContract, data);\n        break;\n      default:\n        break;\n    }\n  };\n  const items: MenuProps['items'] = [\n    {\n      key: '1',\n      label: <span>{formatMessage({ id: 'dropdown.edit' })}</span>,\n      onClick: () => handleItemClick(MenuItem.EditContract),\n    },\n  ];\n\n  return (\n    <Dropdown menu={{ items }} placement=\"bottomRight\">\n      <Button css={actionIconBtn}>\n        <CustomIcon type=\"three-dot\" width={16} height={18} />\n      </Button>\n    </Dropdown>\n  );\n}\n\nconst actionIconBtn = css`\n  background: none;\n  border: none;\n  box-shadow: unset;\n  padding: 0;\n`;\n","import { TableProps } from 'antd';\nimport { LocaleFormatter } from '@/components/locale-formatter';\nimport dayjs from 'dayjs';\nimport { ContractDropdown } from '@/modules/category/components/dropdown/contract.dropdown';\n\ntype ColumnsType<T> = TableProps<T>['columns'];\nexport const contractColumns: ColumnsType<DataContractType> = [\n  {\n    title: <LocaleFormatter id=\"table.column.contractID\" />,\n    dataIndex: 'code',\n    render: (code) => code,\n  },\n\n  {\n    title: <LocaleFormatter id=\"table.column.contractNumber\" />,\n    dataIndex: 'number',\n    render: (number) => number,\n  },\n\n  {\n    title: <LocaleFormatter id=\"table.column.contractName\" />,\n    dataIndex: 'name',\n    render: (name) => name,\n  },\n\n  {\n    title: <LocaleFormatter id=\"table.column.contractStartDate\" />,\n    dataIndex: 'startDate',\n    render: (__, record) => {\n      return `${dayjs(record.startDate).format('DD/MM/YYYY')} `;\n    },\n  },\n\n  {\n    title: <LocaleFormatter id=\"table.column.contractEndDate\" />,\n    dataIndex: 'endDate',\n    render: (__, record) => {\n      return `${dayjs(record.endDate).format('DD/MM/YYYY')} `;\n    },\n  },\n\n  {\n    title: <LocaleFormatter id=\"table.column.contractCustomerID\" />,\n    dataIndex: ['customer'],\n    render: (customer: Customer) => customer?.code,\n  },\n\n  {\n    title: <LocaleFormatter id=\"table.column.contractStatus\" />,\n    dataIndex: ['contractStatus'],\n    render: (status: ContractStatus) => status.name,\n  },\n\n  {\n    title: '',\n    dataIndex: 'calculationMethod',\n    fixed: 'right',\n    width: '6%',\n    render: (__, record) => <ContractDropdown data={record} />,\n  },\n];\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { TableCustom } from '@/components/table';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Button } from 'antd';\nimport { Search, SearchParams } from '@/components/search';\nimport { CustomIcon } from '@/components/icons';\nimport { useRootSelector } from '@/hooks/selector.hook';\nimport { useWatchLoading } from '@/hooks/loading.hook';\nimport { useContract } from '../../services/contract.service';\nimport { Key } from 'antd/es/table/interface';\nimport { Pagination } from '@/constants/pagination';\nimport { contractColumns } from './column/contract.column';\nimport { useModalContract } from '../../components/modals/contract';\n\nexport default function TableContract() {\n  const { openModal } = useModalContract();\n  const { getAllContract } = useContract();\n  const [contractIds, setContractIds] = useState<string[]>();\n\n  const { data, pagination } = useRootSelector((state) => state.category.contract);\n  console.log('data: ', data);\n  const [loading] = useWatchLoading(['get-contract', true]);\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const tab = searchParams.get('tab');\n\n  const handleSearch = ({ textSearch, time }: SearchParams) => {\n    getAllContract({\n      pageIndex: pagination?.pageIndex ?? Pagination.PAGEINDEX,\n      pageSize: Pagination.PAGESIZE,\n      textSearch,\n      time,\n      roleType: tab!,\n    });\n  };\n\n  const rowSelection = {\n    onChange: (_selectedRowKeys: Key[], selectedRows: DataCustomerType[]) => {\n      setContractIds(selectedRows.map((row) => row.id!));\n    },\n  };\n\n  const handleTableChange = (page: number) => {\n    getAllContract({\n      pageIndex: page,\n      pageSize: Pagination.PAGESIZE,\n      roleType: tab!,\n    });\n  };\n\n  useEffect(() => {\n    getAllContract({\n      pageIndex: Pagination.PAGEINDEX,\n      pageSize: Pagination.PAGESIZE,\n      roleType: tab!,\n    });\n  }, [getAllContract, tab]);\n\n  const handleDeleteContract = () => {\n    openModal('Delete Contract', undefined, contractIds);\n  };\n  return (\n    <div css={rootStyle}>\n      <Button\n        onClick={() => openModal('Add Contract')}\n        type=\"primary\"\n        css={addKContractStyle}\n        iconPosition=\"start\"\n        size=\"large\"\n      >\n        <CustomIcon color=\"#fff\" width={16} height={16} type=\"circle-plus\" />\n        <span>Thêm hợp đồng</span>\n      </Button>\n\n      <div css={searchContainer}>\n        <Search onSearch={handleSearch} />\n      </div>\n      <div css={checkBoxStyle}>\n        <Button disabled={!contractIds} onClick={() => handleDeleteContract()} size=\"large\" danger>\n          Xoá mục tiêu đã chọn\n        </Button>\n      </div>\n      <TableCustom\n        rowSelection={rowSelection}\n        columns={contractColumns}\n        dataSource={data}\n        loading={loading}\n        rowKey={(record) => record.id}\n        onTableChange={(page) => handleTableChange(page)}\n        pagination={{\n          current: pagination?.pageIndex,\n          pageSize: Pagination.PAGESIZE,\n          total: pagination?.totalRecords,\n          position: ['bottomCenter'],\n        }}\n        scroll={{ x: 1450 }}\n      />\n    </div>\n  );\n}\n\nconst rootStyle = css`\n  position: relative;\n`;\n\nconst addKContractStyle = css`\n  position: absolute;\n  right: 0;\n  top: -6.5rem;\n  background: #0070b8;\n  display: flex;\n  align-items: center;\n  gap: 0.2rem;\n  &:hover {\n    background: #0070b8 !important;\n    opacity: 0.9;\n  }\n`;\n\nconst searchContainer = css`\n  margin-top: 2.6rem;\n`;\n\nconst checkBoxStyle = css`\n  margin: 1.1rem 0;\n`;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useEffect } from 'react';\nimport { setBreadcrumbItemsAction } from '@/redux/slicers/breadcrumb.slice';\nimport { useDispatch } from 'react-redux';\nimport { ModalContractProvider } from '../../components/modals/contract';\nimport TableContract from './table-contract';\nexport default function ContractPage() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const breadCrumbItems = [\n      {\n        title: {\n          vi_VN: 'Danh mục',\n          en_US: 'Category',\n        },\n      },\n      {\n        title: {\n          vi_VN: 'Hợp đồng',\n          en_US: 'Contract',\n        },\n      },\n    ];\n    dispatch(setBreadcrumbItemsAction(breadCrumbItems));\n  }, [dispatch]);\n  return (\n    <ModalContractProvider>\n      <h3 css={titleStyle}>Hợp đồng</h3>\n      <TableContract />\n    </ModalContractProvider>\n  );\n}\n\nconst titleStyle = css`\n  font-size: 2.4rem;\n  line-height: 2.8rem;\n  font-weight: 600;\n  color: rgba(16, 24, 40, 1);\n  margin-bottom: 0.5rem;\n`;\n"],"names":["ModalContractType","EditContract","DeleteContract","AddContract","useContract","api","useApi","caller","useCaller","dispatch","useDispatch","tenant","getTenant","user","useRootSelector","state","auth","getAllContract","useCallback","pageIndex","Pagination","PAGEINDEX","pageSize","PAGESIZE","textSearch","statusId","time","dayjs","year","toString","roleType","queryParams","PageIndex","PageSize","UserId","id","RoleId","applicationRoles","StatusId","Time","TextSearch","urlParams","generateUrlParams","data","succeeded","post","loadingKey","items","totalRecords","totalPages","totalExtend","setListContractAction","pagination","addKContract","values","dataAddContract","convertToUppercaseFirstLetter","addContractAction","deleteContract","contractIds","ids","join","ApplicationUserId","del","deleteContractAction","updateContract","dataUpdateContract","log","updateContractAction","getAllCustomerContract","get","setAllContractAction","dataCustomer","onFinish","closeModal","form","Form","customerId","add","useEffect","code","item","index","label","value","key","Fragment","jsx","formTitleStyle","jsxs","message","formAddContractStyle","Row","Col","process","labelFormItem","_EMOTION_STRINGIFIED_CSS_ERROR__","Input","_a","location","console","rootStyle","titleStyle","Space","Button","NODE_ENV","loading","deleteclient","styles","map","UpdateContract","edit","oncancel","endDate","formUpdateContractStyle","ModalContext","createContext","context","ModalContractProvider","children","currentModal","setCurrentModal","useState","setOpen","modalName","openModal","MenuItem","formatMessage","handleItemClick","actionIconBtn","CustomIcon","contractColumns","title","LocaleFormatter","dataIndex","render","number","name","__","record","startDate","format","customer","status","fixed","width","ContractDropdown","TableContract","tab","rowSelection","handleTableChange","page","onChange","_selectedRowKeys","setContractIds","position","searchContainer","handleSearch","checkBoxStyle","TableCustom","ContractPage","setBreadcrumbItemsAction","vi_VN","en_US"],"mappings":"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"}