{"version":3,"file":"index-t4AU-uVO.js","sources":["../../src/modules/sales/components/dropdown/opportunity.dropdown.tsx","../../src/modules/sales/pages/opportunity/columns/opportunity.column.tsx","../../src/modules/sales/pages/opportunity/table-opportunity.tsx","../../src/modules/sales/pages/opportunity/index.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Button, Dropdown } from 'antd';\nimport type { MenuProps } from 'antd';\nimport { CustomIcon } from '@/components/icons';\nimport { useLocale } from '@/hooks/locale.hook';\nimport { ModalOpportunityType } from '../../enum/opportunity.enum';\nimport { useModalOpportunity } from '../modals/opportunity';\nimport { useNavigate } from 'react-router-dom';\nimport { getTenant } from '@/utils/common';\n\nenum MenuItem {\n  AssignOpportunity = 1,\n  CloseOpportunity,\n  Delete,\n  CreateHistoryOpportunity,\n}\n\ntype OpportunityDropdownProps = {\n  data: DataOpportunityType;\n};\nexport function OpportunityDropdown({ data }: OpportunityDropdownProps) {\n  const { openModal } = useModalOpportunity();\n  const { formatMessage } = useLocale();\n  const navigate = useNavigate();\n  const tenant = getTenant();\n\n  const handleItemClick = (key: number) => {\n    switch (key) {\n      case MenuItem.AssignOpportunity:\n        openModal(ModalOpportunityType.AssignOpportunity, data);\n        break;\n      case MenuItem.CloseOpportunity:\n        openModal(ModalOpportunityType.CloseOpportunity, data);\n        break;\n      case MenuItem.Delete:\n        openModal(ModalOpportunityType.Delete, data);\n        break;\n      case MenuItem.CreateHistoryOpportunity:\n        openModal(ModalOpportunityType.CreateHistoryOpportunity);\n        break;\n      default:\n        break;\n    }\n  };\n  const items: MenuProps['items'] = [\n    {\n      key: '1',\n      label: <span>{formatMessage({ id: 'title.dropdown.requestEdit' })}</span>,\n      onClick: () => navigate(`/sales/opportunity/${data?.id}?tenant=${tenant}`),\n    },\n    {\n      key: '2',\n      label: <span>{formatMessage({ id: 'title.dropdown.opportunity.assignOpportunity' })}</span>,\n      onClick: () => handleItemClick(MenuItem.AssignOpportunity),\n    },\n    {\n      key: '3',\n      label: <span>{formatMessage({ id: 'title.dropdown.opportunity.updateOpportunity' })}</span>,\n      onClick: () => navigate(`/sales/opportunity/history-opportunity/${data.id}?tenant=${tenant}`),\n    },\n    {\n      key: '4',\n      label: <span>{formatMessage({ id: 'title.dropdown.opportunity.closeOpportunity' })}</span>,\n      onClick: () => handleItemClick(MenuItem.CloseOpportunity),\n    },\n    {\n      key: '5',\n      label: <span>{formatMessage({ id: 'title.dropdown.opportunity.resultReport' })}</span>,\n      onClick: () => navigate(`/sales/opportunity/report-opportunity/${data.id}?tenant=${tenant}`),\n    },\n    {\n      key: '6',\n      label: <span>{formatMessage({ id: 'dropdown.delete' })}</span>,\n    },\n  ];\n\n  return (\n    <Dropdown menu={{ items }} placement=\"bottomRight\">\n      <Button css={actionIconBtn}>\n        <CustomIcon type=\"three-dot\" width={16} height={18} />\n      </Button>\n    </Dropdown>\n  );\n}\n\nconst actionIconBtn = css`\n  background: none;\n  border: none;\n  box-shadow: unset;\n  padding: 0;\n`;\n","import { TableProps } from 'antd';\nimport { LocaleFormatter } from '@/components/locale-formatter';\nimport { OpportunityDropdown } from '@/modules/sales/components/dropdown/opportunity.dropdown';\nimport dayjs from 'dayjs';\nimport { Message } from '@/components/message';\nimport { StatusOpportunity } from '@/modules/sales/enum/status.enum';\n\ntype ColumnsType<T> = TableProps<T>['columns'];\nexport const opportunityColumns: ColumnsType<DataOpportunityType> = [\n  {\n    title: <LocaleFormatter id=\"table.column.customers\" />,\n    dataIndex: 'customerName',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.opportunity.customerNeeds\" />,\n    dataIndex: 'need',\n    render: (customerNeeds) => customerNeeds,\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.opportunity.decisionMakers\" />,\n    dataIndex: 'accountable',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.opportunity.budget\" />,\n    dataIndex: 'budget',\n    render: (budget) => budget,\n    width: '8%',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.opportunity.expectedTime\" />,\n    dataIndex: 'estimatedTime',\n    render: (value) => dayjs(value).format('DD/MM/YYYY'),\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.opportunity.technicalLeads\" />,\n    dataIndex: 'technicalLead',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.opportunity.beneficiaries\" />,\n    dataIndex: 'beneficiary',\n    render: (beneficiaries) => beneficiaries,\n  },\n  {\n    title: 'Giá vốn dự kiến',\n    dataIndex: 'estimatedMoney',\n  },\n  {\n    title: 'Hoa hồng cho người tư vấn',\n    dataIndex: 'commissionMoney',\n  },\n  {\n    title: 'Đối thủ 1',\n    dataIndex: 'opponent1',\n  },\n  {\n    title: 'Đối thủ 1',\n    dataIndex: 'opponent2',\n  },\n  {\n    title: 'Chiến lược của AT&A',\n    dataIndex: 'strategy',\n  },\n  {\n    title: 'Lần tương tác gần nhất giữa AT&A và khách hàng ',\n    dataIndex: 'lastTimeInteract',\n    render: (value) => dayjs(value).format('DD/MM/YYYY'),\n  },\n  {\n    title: 'Đánh giá khả năng thắng',\n    dataIndex: 'winningOppotunity',\n  },\n  {\n    title: 'Trạng thái',\n    align: 'center',\n    dataIndex: ['opportunityStatus', 'name'],\n    render: (__, record) => {\n      let messageType: MessageType;\n      switch (record.opportunityStatus?.code) {\n        case StatusOpportunity.Active:\n          messageType = 'success';\n          break;\n        case StatusOpportunity.OnHold:\n          messageType = 'info';\n          break;\n        case StatusOpportunity.Fail:\n        case StatusOpportunity.Close:\n          messageType = 'error';\n          break;\n        default:\n          messageType = 'warning';\n      }\n      return (\n        <Message hasBackground type={messageType}>\n          {record.opportunityStatus?.name!}\n        </Message>\n      );\n    },\n  },\n  {\n    title: '',\n    dataIndex: 'calculationMethod',\n    fixed: 'right',\n    width: '6%',\n    render: (__, record) => <OpportunityDropdown data={record} />,\n  },\n];\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useEffect, useState } from 'react';\nimport { useLocale } from '@/hooks/locale.hook';\nimport { TableCustom } from '@/components/table';\nimport { CustomIcon } from '@/components/icons';\nimport { opportunityColumns } from './columns/opportunity.column';\nimport { useModalOpportunity } from '../../components/modals/opportunity';\nimport { Button } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport { useOpportunity } from '../../services/opportunity.service';\nimport { Pagination } from '@/constants/pagination';\nimport { Search, SearchParams } from '@/components/search';\nimport { useRootSelector } from '@/hooks/selector.hook';\nimport { useWatchLoading } from '@/hooks/loading.hook';\nimport { getTenant } from '@/utils/common';\nimport { Key } from 'antd/es/table/interface';\nimport { ModalOpportunityType } from '../../enum/opportunity.enum';\nimport { useQuery } from '@/hooks/query.hook';\n\nexport default function TableOpportunity() {\n  const { openModal } = useModalOpportunity();\n  const { formatMessage } = useLocale();\n  const navigate = useNavigate();\n  const { getAllOpportunity, getAllStatusOpportunity } = useOpportunity();\n  const [opportunityIds, setOpportunityIds] = useState<string[]>();\n  const [loading, loadingStatus] = useWatchLoading(\n    ['get-opportunity', true],\n    ['status-opportunity', true],\n  );\n  const { pagination, status, data, totalExtend } = useRootSelector(\n    (state) => state.sale.opportunity,\n  );\n  const { textSearch, time, statusId } = useQuery();\n\n  const rowSelection = {\n    onChange: (_selectedRowKeys: Key[], selectedRows: DataKPIType[]) => {\n      setOpportunityIds(selectedRows.map((row) => row.id!));\n    },\n  };\n\n  const handleTableChange = (page: number) => {\n    getAllOpportunity({\n      pageIndex: page,\n      pageSize: Pagination.PAGESIZE,\n      textSearch: textSearch ? decodeURI(textSearch).replace(/\\+/g, ' ') : undefined,\n      time,\n      statusId,\n    });\n  };\n\n  const handleSearch = ({ textSearch, statusId, time }: SearchParams) => {\n    getAllOpportunity({\n      pageIndex: pagination?.pageIndex ?? Pagination.PAGEINDEX,\n      pageSize: Pagination.PAGESIZE,\n      textSearch,\n      statusId,\n      time,\n    });\n  };\n\n  useEffect(() => {\n    getAllOpportunity({\n      pageIndex: Pagination.PAGEINDEX,\n      pageSize: Pagination.PAGESIZE,\n    });\n    getAllStatusOpportunity();\n  }, [getAllOpportunity, getAllStatusOpportunity]);\n\n  return (\n    <div css={rootStyle}>\n      <h3 css={titleStyle}>{formatMessage({ id: 'title.document.opportunity' })}</h3>\n      <div css={subTitleStyle}>\n        <span>{formatMessage({ id: 'title.document.opportunity' })}</span>\n        <CustomIcon width={8} height={8} type=\"dot\" />\n        <span>\n          {totalExtend ?? 0} {formatMessage({ id: 'title.document.opportunity' })}\n        </span>\n      </div>\n      <Button\n        onClick={() => navigate(`add-opportunity?tenant=${getTenant()}`)}\n        type=\"primary\"\n        css={addKOpportunityStyle}\n        iconPosition=\"start\"\n        size=\"large\"\n      >\n        <CustomIcon color=\"#fff\" width={16} height={16} type=\"circle-plus\" />{' '}\n        <span>Thêm cơ hội</span>\n      </Button>\n      <div css={searchContainer}>\n        <Search onSearch={handleSearch} loadingStatus={loadingStatus} status={status as any} />\n      </div>\n      <Button\n        disabled={!opportunityIds}\n        onClick={() => openModal(ModalOpportunityType.Delete, undefined, opportunityIds)}\n        size=\"large\"\n        danger\n      >\n        Xoá mục tiêu đã chọn\n      </Button>\n      <TableCustom\n        css={tableStyle}\n        rowSelection={rowSelection}\n        columns={opportunityColumns}\n        dataSource={data}\n        loading={loading}\n        rowKey={(record) => record.id}\n        onTableChange={(page) => handleTableChange(page)}\n        pagination={{\n          current: pagination?.pageIndex,\n          pageSize: Pagination.PAGESIZE,\n          total: pagination?.totalRecords,\n          position: ['bottomCenter'],\n        }}\n        scroll={{ x: 2500 }}\n      />\n    </div>\n  );\n}\n\nconst rootStyle = css`\n  position: relative;\n`;\n\nconst subTitleStyle = css`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  font-size: 1.4rem;\n  line-height: 1.8rem;\n`;\n\nconst titleStyle = css`\n  font-size: 1.8rem;\n  line-height: 2.3rem;\n  font-weight: 600;\n`;\n\nconst addKOpportunityStyle = css`\n  background: #0070b8;\n  display: flex;\n  align-items: center;\n  gap: 0.2rem;\n  position: absolute;\n  top: 1.4rem;\n  right: 0;\n  &:hover {\n    background: #0070b8 !important;\n    opacity: 0.9;\n  }\n`;\n\nconst searchContainer = css`\n  margin: 2.6rem 0;\n`;\n\nconst tableStyle = css`\n  margin-top: 2.6rem;\n`;\n","/** @jsxImportSource @emotion/react */\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setBreadcrumbItemsAction } from '@/redux/slicers/breadcrumb.slice';\nimport { ModalOpportunityProvider } from '../../components/modals/opportunity';\nimport TableOpportunity from './table-opportunity';\n\nexport default function OpportunityPage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const breadCrumbItems = [\n      {\n        title: {\n          vi_VN: 'Sale',\n          en_US: 'Sale',\n        },\n      },\n      {\n        title: {\n          vi_VN: 'Cơ hội',\n          en_US: 'Opportunity',\n        },\n      },\n    ];\n    dispatch(setBreadcrumbItemsAction(breadCrumbItems));\n  }, [dispatch]);\n\n  return (\n    <ModalOpportunityProvider>\n      <TableOpportunity />\n    </ModalOpportunityProvider>\n  );\n}\n"],"names":["MenuItem","data","openModal","formatMessage","navigate","useNavigate","handleItemClick","ModalOpportunityType","items","key","label","tenant","onClick","id","actionIconBtn","process","toString","_EMOTION_STRINGIFIED_CSS_ERROR__","opportunityColumns","title","jsx","LocaleFormatter","dataIndex","render","customerNeeds","budget","width","dayjs","value","format","beneficiaries","align","__","record","messageType","opportunityStatus","code","StatusOpportunity","Active","OnHold","Fail","Close","Message","name","fixed","OpportunityDropdown","TableOpportunity","getAllOpportunity","getAllStatusOpportunity","opportunityIds","setOpportunityIds","useState","textSearch","loading","time","statusId","rowSelection","pagination","status","handleTableChange","page","useQuery","PAGESIZE","onChange","handleSearch","pageSize","useEffect","pageIndex","PAGEINDEX","rootStyle","titleStyle","jsxs","subTitleStyle","totalExtend","CustomIcon","Button","getTenant","current","total","totalRecords","position","TableCustom","tableStyle","Pagination","OpportunityPage","dispatch","useDispatch","setBreadcrumbItemsAction","vi_VN","en_US","ModalOpportunityProvider"],"mappings":"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"}