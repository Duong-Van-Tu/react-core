{"version":3,"file":"sale-kit-auth-CdQ3EIsM.js","sources":["../../src/modules/sales/pages/sale-kit/sale-kit-auth.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { CustomIcon } from '@/components/icons';\nimport { useLocale } from '@/hooks/locale.hook';\nimport ListSaleKit from './list-sale-kit';\nimport { usePermission } from '@/hooks/permission.hook';\nimport { useRootSelector } from '@/hooks/selector.hook';\nimport { CheckboxValueType } from 'antd/es/checkbox/Group';\nimport { useEffect, useState } from 'react';\nimport { userSaleKit } from '../../services/sale-kit.service';\nimport { Select } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { useWatchLoading } from '@/hooks/loading.hook';\nimport { Spinner } from '@/components/spinner';\n\nconst SaleKitAuth = () => {\n  const { formatMessage } = useLocale();\n  const { isAdmin } = usePermission();\n  const { getAllSaleKitRole, downLoadDocument, getAllRoleInSaleKit } = userSaleKit();\n\n  const [loading] = useWatchLoading(['get-sale-kit-role', true]);\n\n  const { dataSaleKitRole, dataRole } = useRootSelector((state) => state.sale.saleKit);\n  const [checkedList, setCheckedList] = useState<CheckboxValueType[]>([]);\n  const [itemSelect, setItemSelect] = useState<string>('');\n  const [dataSelect, setDataSelect] = useState<{ value: string; label: string }[]>([]);\n\n  useEffect(() => {\n    getAllRoleInSaleKit({});\n  }, []);\n\n  useEffect(() => {\n    if (itemSelect) {\n      getAllSaleKitRole({ roleId: itemSelect });\n    }\n  }, [itemSelect]);\n\n  useEffect(() => {\n    if (dataRole.length > 0) {\n      const data = dataRole.map((it) => ({\n        value: it.id,\n        label: it.displayName,\n      }));\n\n      setItemSelect(data[0].value);\n      setDataSelect(data);\n    }\n  }, [dataRole]);\n\n  const handleSelect = (roleId: string) => {\n    setItemSelect(roleId);\n  };\n\n  return (\n    <div css={containerStyle}>\n      <div css={closeStyle}>\n        <CustomIcon width={12} height={14} type=\"prev\" />\n        <Link css={goBackLinkStyle} to={'/sales/sale-kit'}>\n          {formatMessage({ id: 'title.back' })}\n        </Link>\n      </div>\n      <h1 css={titleStyle}>{formatMessage({ id: 'title.document.saltKitAuth' })}</h1>\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          gap: '12px',\n        }}\n      >\n        <h2\n          style={{\n            fontSize: '14px',\n            color: '#667085',\n          }}\n        >\n          {formatMessage({ id: 'title.role' })}\n        </h2>\n        <Select\n          style={{\n            width: '200px',\n          }}\n          value={itemSelect}\n          options={dataSelect}\n          onChange={handleSelect}\n        />\n      </div>\n      {!loading ? (\n        <ListSaleKit\n          isAdmin={isAdmin}\n          setCheckedList={setCheckedList}\n          checkedList={checkedList}\n          dataWithRole={dataSaleKitRole}\n          downLoadDocument={downLoadDocument}\n        />\n      ) : (\n        <Spinner\n          width={50}\n          height={50}\n          styles={{\n            marginTop: '20px',\n            width: '50px',\n            height: '50px',\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default SaleKitAuth;\n\nconst containerStyle = css`\n  width: 100%;\n  max-width: 120rem;\n  height: 100%;\n  margin: 0 auto;\n  padding: 0 15px;\n`;\n\nconst closeStyle = css`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 0.4rem;\n  margin-top: 3.7rem;\n  svg path {\n    fill: rgba(0, 0, 0, 1);\n  }\n`;\n\nconst titleStyle = css`\n  font-size: 2.4rem;\n  font-weight: 600;\n  color: rgba(16, 24, 40, 1);\n  margin: 8rem 0 6rem;\n`;\n\nconst goBackLinkStyle = css`\n  cursor: pointer;\n  font-size: 1.4rem;\n  color: #000;\n`;\n"],"names":["SaleKitAuth","formatMessage","getAllSaleKitRole","downLoadDocument","getAllRoleInSaleKit","loading","useWatchLoading","isAdmin","dataSaleKitRole","dataRole","useRootSelector","state","useEffect","checkedList","itemSelect","it","data","value","id","roleId","setItemSelect","label","displayName","containerStyle","handleSelect","jsx","CustomIcon","goBackLinkStyle","titleStyle","color","jsxs","width","process","NODE_ENV","dataSelect","_EMOTION_STRINGIFIED_CSS_ERROR__","Spinner","ListSaleKit","closeStyle","setCheckedList"],"mappings":"4SAYA,MAAAA,EAAgC,IAAA,OAIxB,cAAAC,GAAAA,EAAAA,EAAA,CAAEA,QAAAA,GAAAA,EAAAA,EAAAA,CAA4B,kBAAAC,EAAAA,iBAAAA,EAAAC,oBAAAA,GAAAC,EAAAA,EAAA,CAAAC,CAAA,EAAAC,EAAA,CAAA,oBAAA,EAAA,CAAA,EAC5BC,CACF,gBAAAC,EAAAA,SAAAA,CAAAA,EAAAC,EAAAA,GAAAA,EAAAA,KAAAA,OAAAA,EAAAC,CAAAA,EAAAC,CAAAA,aAAA,CAAA,CAAA,EAAET,CAAAA,EAAAA,CAAAA,EAAAA,aAAAA,EAAmBC,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,SAAAA,CAAAA,CAAAA,EAAkBC,EAAAA,UAAAA,IAAAA,CAE7CQ,EAAc,CAAA,CAAA,CAERR,EAAAA,CAAAA,CAAAA,EAAEI,EAAAA,UAAAA,IAAAA,CAA0BI,GAC3BC,EAAAA,CACyB,OAAAC,CAAA,CAAA,CAAAA,EAChC,CAAAA,CAAA,CAAA,EAEAF,EAAAA,UAAAA,IAAgB,CAEhBA,GAAAA,EAAK,OAAA,EAAA,CAELA,MAAAA,IAAgB,IAAAG,IAAA,CACEC,MAAAA,EAAAA,GACIC,MAAAF,EAAAG,WAAEC,EAAAA,EAAoBC,EAAAJ,EAAA,CAAA,EAAA,KAAA,EAE7BA,EAAAA,CAAAA,CAEfJ,CAAAA,EACMH,CAAAA,CAAAA,CAAAA,EACIO,MAAAA,EAAAA,GAAAA,CAEJK,EAAAA,CAAUC,CAAAA,EAGEN,SAAAA,MAAAA,CAGlB,IAAAO,EAEMC,SAAAA,CAAAA,QACJJ,CAAAA,IAAAA,EACF,UAAAK,EAAAC,EAAA,CAGER,MAAK,GACF,OAAA,GACC,KAAA,MAAA,QAC4B,IAAAS,EACX,GAAA,kBAAA,SAAA1B,GAEnB,GAAA,YAAA,CACC,CAAA,CAAyC,CAAA,CAAA,CAG7B,EAAAwB,EAAA,KAAA,CAAA,IAAAG,EACG,SACP3B,EAAA,CAGP4B,GAAA,4BAAA,GAGW,EAAAC,EAAA,MAAA,CAAA,OAGQZ,QAAAA,OAEnBa,WAAA,aAISjB,MAmBLiB,EAIL,SAAA,CAAAN,EACH,KAAA,CAMgB,MAAA,CAQJO,SAAAA,OAAA,MAAA,SAAA,EAAA,SAAA/B,EAAA,CAAA,GAAA,YAAA,CAWA+B,CAAAA,CAAAA,EAAAA,EAAAA,EAAAC,CAAA,MAAA,CAAA,MAAA,OAAA,EAAA,MAAAnB,EAAA,QAAAoB,EAAA,SAAAV,CAAA,CAAAW,CAAAA,CAAA,CAAA,EAAA9B,EAOKoB,EAAAW,EAAA,CAAA,MAAA,GAAAD,OAAAA,GAAA,OAAA,kDAPLE,EAAA,CAOKC,QAAAA,EAAA,eAAAC,EAAA,YAAA1B,EAAA,aAAAL,EAAA,iBAAAL,CAAA,CAAA"}