{"version":3,"file":"message.hook-D6m5Y0y-.js","sources":["../../src/hooks/message.hook.ts"],"sourcesContent":["import { useEffect, useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useRootSelector } from './selector.hook';\nimport { clearMessageAction } from '@/redux/slicers/api-message.slice';\n\nexport function useWatchMessage(...keys: string[]) {\n  const box = useRootSelector((state) => {\n    const box = state.apiMessage.box;\n    return keys.map((key) => box[key]);\n  });\n  const dispatch = useDispatch();\n\n  const _keys = useMemo(() => {\n    return keys;\n  }, [...keys]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(clearMessageAction(_keys));\n    };\n  }, [dispatch, _keys]);\n\n  return useMemo(() => {\n    const errors = [];\n    const successes = [];\n    for (const { type, messages } of box.filter(Boolean) as MessageOptions[]) {\n      if (type === 'error') {\n        errors.push(...messages);\n      } else {\n        successes.push(...messages);\n      }\n    }\n    return {\n      errors,\n      successes,\n    };\n  }, [...box]);\n}\n"],"names":["useWatchMessage","keys","box","useRootSelector","state","apiMessage","map","key","dispatch","useDispatch","_keys","useMemo","useEffect","clearMessageAction","errors","successes","type","messages","filter","Boolean","push"],"mappings":"8DAKO,SAASA,KAAmBC,EAAgB,CAC3CC,MAAAA,EAAMC,EAA2BC,GAAA,CAC/BF,MAAAA,EAAME,EAAMC,WAAWH,IAC7B,OAAOD,EAAKK,IAAaJ,GAAAA,EAAIK,CAAG,CAAC,CAAA,CAClC,EACKC,EAAWC,IAEXC,EAAQC,EAAAA,QAAQ,IACbV,EACN,CAAC,GAAGA,CAAI,CAAC,EAEZW,OAAAA,EAAAA,UAAU,IACD,IAAM,CACFC,EAAAA,EAAmBH,CAAK,CAAC,CAAA,EAEnC,CAACF,EAAUE,CAAK,CAAC,EAEbC,UAAQ,IAAM,CACnB,MAAMG,EAAS,CAAA,EACTC,EAAY,CAAA,EACP,SAAA,CAAEC,KAAAA,EAAMC,SAAAA,CAAAA,IAAcf,EAAIgB,OAAOC,OAAO,EAC7CH,IAAS,QACJI,EAAAA,KAAK,GAAGH,CAAQ,EAEbG,EAAAA,KAAK,GAAGH,CAAQ,EAGvB,MAAA,CACLH,OAAAA,EACAC,UAAAA,CAAAA,CACF,EACC,CAAC,GAAGb,CAAG,CAAC,CACb"}