{"version":3,"file":"index-RB11O7uD.js","sources":["../../src/modules/users/pages/income/components/view.detail.tsx","../../src/modules/users/pages/income/column/location-income.column.tsx","../../src/modules/users/pages/income/location-income.tsx","../../src/modules/users/pages/income/column/current-income.column.tsx","../../src/modules/users/pages/income/current-income.tsx","../../src/modules/users/pages/income/index.tsx"],"sourcesContent":["import { LocaleFormatter } from '@/components/locale-formatter';\nimport { Link } from 'react-router-dom';\nimport { useRootSelector } from '@/hooks/selector.hook';\n\ntype Props = {\n  recordAdmin?: DataIncomTypeWithRoleAdminType;\n  recordUser?: DataIncomTypeWithRoleUserType;\n};\n\nconst ViewDetail = ({ recordAdmin, recordUser }: Props) => {\n  const user = useRootSelector((state) => state.auth.user);\n\n  return (\n    <Link\n      style={{\n        textAlign: 'center',\n        display: 'block',\n      }}\n      to={\n        recordAdmin\n          ? `/personnel/infor-income/details-view?userId=${recordAdmin.applicationUser.id}`\n          : `/personnel/infor-income/details-view?userId=${user?.id}&month=${recordUser?.month}&year=${recordUser?.year}`\n      }\n    >\n      <LocaleFormatter id=\"title.document.detailsView\" />\n    </Link>\n  );\n};\n\nexport default ViewDetail;\n","import { TableProps } from 'antd';\nimport { LocaleFormatter } from '@/components/locale-formatter';\nimport ViewDetail from '../components/view.detail';\n\ntype ColumnsType<T> = TableProps<T>['columns'];\nexport const locationIncomeColumnsUser: ColumnsType<DataIncomTypeWithRoleUserType> = [\n  {\n    title: <LocaleFormatter id=\"title.month\" />,\n    dataIndex: 'month',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.position1\" />,\n    dataIndex: 'oneLocation',\n    render: (_, record) => {\n      return <>{record?.incomeRoles[0]?.income ? record?.incomeRoles[0]?.income : '-'}</>;\n    },\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.position2\" />,\n    dataIndex: 'twoLocation',\n    render: (_, record) => {\n      return <>{record?.incomeRoles[1]?.income ? record?.incomeRoles[1]?.income : '-'}</>;\n    },\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.position3\" />,\n    dataIndex: 'threeLocation',\n    render: (_, record) => {\n      return <>{record?.incomeRoles[2]?.income ? record?.incomeRoles[2]?.income : '-'}</>;\n    },\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.position4\" />,\n    dataIndex: 'fourLocation',\n    render: (_, record) => {\n      return <>{record?.incomeRoles[3]?.income ? record?.incomeRoles[3]?.income : '-'}</>;\n    },\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.position5\" />,\n    dataIndex: 'fiveLocation',\n    render: (_, record) => {\n      return <>{record?.incomeRoles[4]?.income ? record?.incomeRoles[4]?.income : '-'}</>;\n    },\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.otherIncome\" />,\n    dataIndex: 'incomeOther',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.totalIncomeReceived\" />,\n    dataIndex: 'totalIncome',\n  },\n  {\n    title: '',\n    dataIndex: 'detailsView',\n    fixed: 'right',\n    width: '10%',\n    render: (_, record) => <ViewDetail recordUser={record} />,\n  },\n];\n\nexport const locationIncomeColumnsAdmin: ColumnsType<DataIncomTypeWithRoleAdminType> = [\n  {\n    title: <LocaleFormatter id=\"title.column.income.humanResourceCode\" />,\n    dataIndex: ['applicationUser', 'id'],\n  },\n  {\n    title: <LocaleFormatter id=\"title.column.income.fullName\" />,\n    dataIndex: ['applicationUser', 'fullName'],\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.position1\" />,\n    dataIndex: 'oneLocation',\n    render: (_, record) => {\n      return <>{record?.incomeRoles[0]?.income ? record?.incomeRoles[0]?.income : '-'}</>;\n    },\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.position2\" />,\n    dataIndex: 'twoLocation',\n    render: (_, record) => {\n      return <>{record?.incomeRoles[1]?.income ? record?.incomeRoles[1]?.income : '-'}</>;\n    },\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.position3\" />,\n    dataIndex: 'threeLocation',\n    render: (_, record) => {\n      return <>{record?.incomeRoles[2]?.income ? record?.incomeRoles[2]?.income : '-'}</>;\n    },\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.position4\" />,\n    dataIndex: 'fourLocation',\n    render: (_, record) => {\n      return <>{record?.incomeRoles[3]?.income ? record?.incomeRoles[3]?.income : '-'}</>;\n    },\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.position5\" />,\n    dataIndex: 'fiveLocation',\n    render: (_, record) => {\n      return <>{record?.incomeRoles[4]?.income ? record?.incomeRoles[4]?.income : '-'}</>;\n    },\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.otherIncome\" />,\n    dataIndex: 'incomeOther',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.totalIncomeReceived\" />,\n    dataIndex: 'totalIncome',\n  },\n  {\n    title: '',\n    dataIndex: 'detailsView',\n    fixed: 'right',\n    width: '10%',\n    render: (_, record) => <ViewDetail recordAdmin={record} />,\n  },\n];\n","import { TableCustom } from '@/components/table';\nimport {\n  locationIncomeColumnsAdmin,\n  locationIncomeColumnsUser,\n} from './column/location-income.column';\nimport { FilterIncomeType } from '../../services/income.service';\nimport { Pagination } from '@/constants/pagination';\n\ntype Props = {\n  data: DataIncomTypeWithRoleAdminType[] | DataIncomTypeWithRoleUserType[] | undefined;\n  loading: boolean;\n  isAdmin: boolean | undefined;\n  pagination: PaginationAPI | undefined;\n  getListIncomeWithRoleAdmin: (params: FilterIncomeType) => void;\n  getListIncomeWithRoleUser: (params: FilterIncomeType) => void;\n};\n\nexport default function LocationIncomeTable({\n  data,\n  isAdmin,\n  loading,\n  pagination,\n  getListIncomeWithRoleAdmin,\n  getListIncomeWithRoleUser,\n}: Props) {\n  const handleTableChange = (page: number) => {\n    if (isAdmin) {\n      getListIncomeWithRoleAdmin({\n        pageIndex: page,\n        pageSize: Pagination.PAGESIZE,\n      });\n    } else {\n      getListIncomeWithRoleUser({\n        pageIndex: page,\n        pageSize: Pagination.PAGESIZE,\n      });\n    }\n  };\n\n  return (\n    <TableCustom\n      columns={isAdmin ? locationIncomeColumnsAdmin : locationIncomeColumnsUser}\n      dataSource={data}\n      loading={loading}\n      rowKey={(record) => record.key}\n      onTableChange={(page) => handleTableChange(page)}\n      pagination={{\n        current: pagination?.pageIndex,\n        pageSize: Pagination.PAGESIZE,\n        total: pagination?.totalRecords,\n        position: ['bottomCenter'],\n      }}\n      scroll={{ x: 1450 }}\n    />\n  );\n}\n","import { TableProps } from 'antd';\nimport { LocaleFormatter } from '@/components/locale-formatter';\ntype ColumnsType<T> = TableProps<T>['columns'];\n\nexport const currentIncomeColumns: ColumnsType<DataIncomeType> = [\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.totalIncomeBeforeTaxes\" />,\n    dataIndex: 'incomeBeforeTax',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.totalIncomeIsNotTaxable\" />,\n    dataIndex: 'incomeNonTax',\n  },\n  {\n    title: (\n      <LocaleFormatter id=\"table.column.currentIncome.totalDeductionDueToFamilyCircumstances\" />\n    ),\n    dataIndex: 'dependent',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.totalSocialInsuranceAmount\" />,\n    dataIndex: 'insurance',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.totalTaxableIncome\" />,\n    dataIndex: 'incomeTax',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.totalTemporaryTaxCollected\" />,\n    dataIndex: 'personalIncomeTax',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.totalIncomeReceived\" />,\n    dataIndex: 'incomeRecevied',\n  },\n];\n\nexport const adminCurrentIncomeColumns: ColumnsType<DataIncomeType> = [\n  {\n    title: <LocaleFormatter id=\"title.column.income.humanResourceCode\" />,\n    dataIndex: ['applicationUser', 'id'],\n  },\n  {\n    title: <LocaleFormatter id=\"title.column.income.fullName\" />,\n    dataIndex: ['applicationUser', 'fullName'],\n  },\n  {\n    title: <LocaleFormatter id=\"title.column.income.position\" />,\n    dataIndex: 'roles',\n    render: (roles: RoleType[]) => roles.map((role) => role.name).join(', '),\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.totalIncomeBeforeTaxes\" />,\n    dataIndex: 'incomeBeforeTax',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.totalIncomeIsNotTaxable\" />,\n    dataIndex: 'incomeNonTax',\n  },\n  {\n    title: (\n      <LocaleFormatter id=\"table.column.currentIncome.totalDeductionDueToFamilyCircumstances\" />\n    ),\n    dataIndex: 'dependent',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.totalSocialInsuranceAmount\" />,\n    dataIndex: 'insurance',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.totalTaxableIncome\" />,\n    dataIndex: 'incomeTax',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.totalTemporaryTaxCollected\" />,\n    dataIndex: 'personalIncomeTax',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.totalIncomeReceived\" />,\n    dataIndex: 'incomeRecevied',\n  },\n];\n","import { TableCustom } from '@/components/table';\nimport { currentIncomeColumns, adminCurrentIncomeColumns } from './column/current-income.column';\nimport { Pagination } from '@/constants/pagination';\nimport { FilterIncomeType } from '../../services/income.service';\n\ntype Props = {\n  data: DataIncomeType[];\n  loading: boolean;\n  isAdmin: boolean | undefined;\n  pagination: PaginationAPI | undefined;\n  getListIncome: (params: FilterIncomeType) => void;\n};\n\nexport default function CurrentIncomeTable({\n  data,\n  loading,\n  isAdmin,\n  pagination,\n  getListIncome,\n}: Props) {\n  const handleTableChange = (page: number) => {\n    getListIncome({\n      pageIndex: page,\n      pageSize: Pagination.PAGESIZE,\n    });\n  };\n\n  return (\n    <TableCustom\n      columns={isAdmin ? adminCurrentIncomeColumns : currentIncomeColumns}\n      dataSource={data}\n      loading={loading}\n      rowKey={(record) => record.key}\n      onTableChange={(page) => handleTableChange(page)}\n      pagination={\n        isAdmin\n          ? {\n              current: pagination?.pageIndex,\n              pageSize: Pagination.PAGESIZE,\n              total: pagination?.totalRecords,\n              position: ['bottomCenter'],\n            }\n          : undefined\n      }\n      scroll={{ x: 1450 }}\n    />\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button, Tabs, TabsProps } from 'antd';\nimport { setBreadcrumbItemsAction } from '@/redux/slicers/breadcrumb.slice';\nimport LocationIncomeTable from './location-income';\nimport CurrentIncomeTable from './current-income';\nimport { useLocale } from '@/hooks/locale.hook';\nimport { useIncome } from '../../services/income.service';\nimport { Pagination } from '@/constants/pagination';\nimport { useRootSelector } from '@/hooks/selector.hook';\nimport { usePermission } from '@/hooks/permission.hook';\nimport { useWatchLoading } from '@/hooks/loading.hook';\nimport { Search, SearchParams } from '@/components/search';\nimport { DownloadOutlined } from '@ant-design/icons';\n\nexport default function InformationIncomePage() {\n  const { getListIncome, getListIncomeWithRoleUser, getListIncomeWithRoleAdmin } = useIncome();\n  const { isAdmin } = usePermission();\n  const { formatMessage } = useLocale();\n\n  const [loadingAdmin, loadingInComeWithRoleAdmin, loadingInComeWithRoleUser] = useWatchLoading(\n    ['get-list-income', true],\n    ['get-list-income-with-role-admin', true],\n    ['get-list-income-with-role-user', true],\n  );\n\n  const dispatch = useDispatch();\n\n  const { data, dataRoleAdmin, dataRoleUser, pagination } = useRootSelector(\n    (state) => state.user.income,\n  );\n\n  const [tab, setTab] = useState('1');\n\n  useEffect(() => {\n    const breadCrumbItems = [\n      {\n        title: {\n          vi_VN: 'Nhân sự',\n          en_US: 'Personnel',\n        },\n      },\n      {\n        title: {\n          vi_VN: 'Thông tin thu nhập',\n          en_US: 'Income information',\n        },\n      },\n    ];\n    dispatch(setBreadcrumbItemsAction(breadCrumbItems));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (tab === '1') {\n      getListIncome({\n        pageIndex: Pagination.PAGEINDEX,\n        pageSize: Pagination.PAGESIZE,\n      });\n      return;\n    }\n    if (tab === '2') {\n      if (isAdmin) {\n        getListIncomeWithRoleAdmin({\n          pageIndex: Pagination.PAGEINDEX,\n          pageSize: Pagination.PAGESIZE,\n        });\n      } else {\n        getListIncomeWithRoleUser({\n          pageIndex: Pagination.PAGEINDEX,\n          pageSize: Pagination.PAGESIZE,\n        });\n      }\n      return;\n    }\n  }, [tab]);\n\n  const items: TabsProps['items'] = [\n    {\n      key: '1',\n      label: formatMessage({ id: 'title.document.incomeDuringTheYear' }),\n      children: (\n        <CurrentIncomeTable\n          data={data}\n          loading={loadingAdmin}\n          isAdmin={isAdmin}\n          pagination={pagination}\n          getListIncome={getListIncome}\n        />\n      ),\n    },\n    {\n      key: '2',\n      label: formatMessage({ id: 'title.document.incomeByPosition' }),\n      children: (\n        <LocationIncomeTable\n          data={isAdmin ? dataRoleAdmin : dataRoleUser}\n          isAdmin={isAdmin}\n          loading={isAdmin ? loadingInComeWithRoleAdmin : loadingInComeWithRoleUser}\n          pagination={pagination}\n          getListIncomeWithRoleAdmin={getListIncomeWithRoleAdmin}\n          getListIncomeWithRoleUser={getListIncomeWithRoleUser}\n        />\n      ),\n    },\n  ];\n\n  const handleSearch = ({ textSearch, time }: SearchParams) => {\n    if (tab === '1') {\n      getListIncome({\n        pageIndex: pagination?.pageIndex ?? Pagination.PAGEINDEX,\n        pageSize: Pagination.PAGESIZE,\n        textSearch,\n        time,\n      });\n      return;\n    }\n    if (tab === '2') {\n      if (isAdmin) {\n        getListIncomeWithRoleAdmin({\n          pageIndex: pagination?.pageIndex ?? Pagination.PAGEINDEX,\n          pageSize: Pagination.PAGESIZE,\n          textSearch,\n          time,\n        });\n      } else {\n        getListIncomeWithRoleUser({\n          pageIndex: pagination?.pageIndex ?? Pagination.PAGEINDEX,\n          pageSize: Pagination.PAGESIZE,\n          textSearch,\n          time,\n        });\n      }\n      return;\n    }\n  };\n\n  const onChange = (key: string) => {\n    setTab(key);\n  };\n\n  return (\n    <div>\n      <div\n        style={{\n          display: 'flex',\n          alignItems: ' center',\n          justifyContent: 'space-between',\n        }}\n      >\n        <h3 css={titleStyle}>{formatMessage({ id: 'title.document.inforIncome' })}</h3>\n        {isAdmin && (\n          <Button type=\"primary\" size=\"large\" icon={<DownloadOutlined />}>\n            Import Excel\n          </Button>\n        )}\n      </div>\n      {isAdmin && (\n        <div css={searchContainer}>\n          <Search onSearch={handleSearch} />\n        </div>\n      )}\n      <Tabs defaultActiveKey={tab} items={items} onChange={onChange} />\n    </div>\n  );\n}\n\nconst titleStyle = css`\n  font-size: 1.8rem;\n  line-height: 2rem;\n  font-weight: 500;\n  margin-bottom: 2.4rem;\n  color: #101828;\n`;\n\nconst searchContainer = css`\n  margin: 2.6rem 0;\n`;\n"],"names":["ViewDetail","recordAdmin","recordUser","user","useRootSelector","state","auth","jsx","Link","textAlign","display","applicationUser","id","month","year","LocaleFormatter","locationIncomeColumnsUser","title","dataIndex","render","_","record","Fragment","incomeRoles","income","fixed","width","locationIncomeColumnsAdmin","LocationIncomeTable","data","isAdmin","loading","pagination","getListIncomeWithRoleAdmin","getListIncomeWithRoleUser","handleTableChange","page","pageIndex","pageSize","Pagination","PAGESIZE","TableCustom","key","current","total","totalRecords","position","x","currentIncomeColumns","adminCurrentIncomeColumns","roles","map","role","name","join","CurrentIncomeTable","getListIncome","undefined","InformationIncomePage","formatMessage","loadingInComeWithRoleAdmin","dataRoleAdmin","dispatch","setBreadcrumbItemsAction","breadCrumbItems","vi_VN","en_US","useEffect","PAGEINDEX","tab","loadingAdmin","children","time","dataRoleUser","textSearch","handleSearch","onChange","_EMOTION_STRINGIFIED_CSS_ERROR__","process"],"mappings":"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"}