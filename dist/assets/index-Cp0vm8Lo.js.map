{"version":3,"file":"index-Cp0vm8Lo.js","sources":["../../src/modules/users/services/income.service.ts","../../src/modules/users/pages/income/components/view.detail.tsx","../../src/modules/users/pages/income/column/location-income.column.tsx","../../src/modules/users/pages/income/location-income.tsx","../../src/modules/users/pages/income/column/current-income.column.tsx","../../src/modules/users/pages/income/current-income.tsx","../../src/modules/users/pages/income/index.tsx"],"sourcesContent":["import { useApi, useCaller } from '@/hooks/api.hook';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  setListIncomeAction,\n  setListIncomeActionWithRoleAdmin,\n  setListIncomeActionWithRoleUser,\n  setListIncomeDetail,\n} from '../reducers/slicers/income.slice';\n// import { useRootSelector } from '@/hooks/selector.hook';\nimport { Pagination } from '@/constants/pagination';\nimport { generateUrlParams, getTenant } from '@/utils/common';\nimport dayjs from 'dayjs';\n\nexport type FilterIncomeType = {\n  pageIndex: number;\n  pageSize: number;\n  month?: string;\n  year?: string;\n  textSearch?: string;\n  orderCol?: string;\n  orderDir?: string;\n  code?: string;\n  userId?: string;\n  statusId?: string;\n  roleId?: string;\n  time?: string;\n  roleType?: string;\n};\n\nexport const useIncome = () => {\n  const api = useApi('');\n  const caller = useCaller();\n  const dispatch = useDispatch();\n  const tenant = getTenant();\n  // const user = useRootSelector((state) => state.auth.user);\n\n  const getListIncome = useCallback(\n    async ({\n      pageIndex = Pagination.PAGEINDEX,\n      pageSize = Pagination.PAGESIZE,\n      textSearch,\n      time = dayjs().year().toString(),\n    }: FilterIncomeType) => {\n      const queryParams: { [key: string]: string | undefined } = {\n        tenant,\n        PageIndex: pageIndex.toString(),\n        PageSize: pageSize.toString(),\n        TextSearch: textSearch,\n        Time: `1-1-${time}`,\n      };\n\n      const urlParams = generateUrlParams(queryParams);\n\n      const { data, succeeded } = await caller(\n        () => api.post(`/EmployeeSalary/get-list-with-pagination?${urlParams}`),\n        {\n          loadingKey: 'get-list-income',\n        },\n      );\n      if (succeeded) {\n        const { items, totalRecords, pageIndex, totalPages, totalExtend } = data;\n        dispatch(\n          setListIncomeAction({\n            data: items,\n            pagination: {\n              pageIndex,\n              totalRecords,\n              totalPages,\n            },\n            totalExtend,\n          }),\n        );\n      }\n    },\n    [caller, api],\n  );\n\n  const getListIncomeWithRoleUser = useCallback(\n    async ({\n      pageIndex = Pagination.PAGEINDEX,\n      pageSize = Pagination.PAGESIZE,\n      textSearch,\n      time = dayjs().year().toString(),\n    }: FilterIncomeType) => {\n      const queryParams: { [key: string]: string | undefined } = {\n        tenant,\n        PageIndex: pageIndex.toString(),\n        PageSize: pageSize.toString(),\n        TextSearch: textSearch,\n        Time: `1-1-${time}`,\n      };\n\n      const urlParams = generateUrlParams(queryParams);\n\n      const { data, succeeded } = await caller(\n        () => api.post(`/EmployeeSalary/get-list-role-with-pagination?${urlParams}`),\n        {\n          loadingKey: 'get-list-income-with-role-user',\n        },\n      );\n      if (succeeded) {\n        const { items, totalRecords, pageIndex, totalPages, totalExtend } = data;\n        dispatch(\n          setListIncomeActionWithRoleUser({\n            data: items,\n            pagination: {\n              pageIndex,\n              totalRecords,\n              totalPages,\n            },\n            totalExtend,\n          }),\n        );\n      }\n    },\n    [caller, api],\n  );\n\n  const getListIncomeWithRoleAdmin = useCallback(\n    async ({\n      pageIndex = Pagination.PAGEINDEX,\n      pageSize = Pagination.PAGESIZE,\n      textSearch,\n      time = dayjs().year().toString(),\n    }: FilterIncomeType) => {\n      const queryParams: { [key: string]: string | undefined } = {\n        tenant,\n        PageIndex: pageIndex.toString(),\n        PageSize: pageSize.toString(),\n        TextSearch: textSearch,\n        Time: `1-1-${time}`,\n      };\n\n      const urlParams = generateUrlParams(queryParams);\n\n      const { data, succeeded } = await caller(\n        () => api.post(`/EmployeeSalary/get-list-admin-role-with-pagination?${urlParams}`),\n        {\n          loadingKey: 'get-list-income-with-role-admin',\n        },\n      );\n      if (succeeded) {\n        const { items, totalRecords, pageIndex, totalPages, totalExtend } = data;\n        dispatch(\n          setListIncomeActionWithRoleAdmin({\n            data: items,\n            pagination: {\n              pageIndex,\n              totalRecords,\n              totalPages,\n            },\n            totalExtend,\n          }),\n        );\n      }\n    },\n    [caller, api],\n  );\n\n  const getListIncomeDetail = useCallback(\n    async ({\n      pageIndex = Pagination.PAGEINDEX,\n      pageSize = Pagination.PAGESIZE,\n      month,\n      year,\n      userId,\n    }: FilterIncomeType) => {\n      const queryParams: { [key: string]: string | undefined } = {\n        tenant,\n        PageIndex: pageIndex.toString(),\n        PageSize: pageSize.toString(),\n        month,\n        year,\n        userId,\n      };\n\n      const urlParams = generateUrlParams(queryParams);\n\n      const { data, succeeded } = await caller(\n        () => api.post(`/EmployeeSalaryDetail/get-list-with-pagination?${urlParams}`),\n        {\n          loadingKey: 'get-list-income-detail',\n        },\n      );\n      if (succeeded) {\n        const { items, totalRecords, pageIndex, totalPages, totalExtend } = data;\n\n        dispatch(\n          setListIncomeDetail({\n            data: items,\n            pagination: {\n              pageIndex,\n              totalRecords,\n              totalPages,\n            },\n            totalExtend,\n          }),\n        );\n      }\n    },\n    [caller, api],\n  );\n\n  // EmployeeSalaryDetail/get-list-with-pagination\n  return {\n    getListIncomeDetail,\n    getListIncome,\n    getListIncomeWithRoleUser,\n    getListIncomeWithRoleAdmin,\n  };\n};\n","import { LocaleFormatter } from '@/components/locale-formatter';\nimport { usePermission } from '@/hooks/permission.hook';\nimport { useIncome } from '@/modules/users/services/income.service';\nimport { Link } from 'react-router-dom';\nimport { Pagination } from '@/constants/pagination';\nimport { useRootSelector } from '@/hooks/selector.hook';\n\ntype Props = {\n  recordAdmin?: DataIncomTypeWithRoleAdminType;\n  recordUser?: DataIncomTypeWithRoleUserType;\n};\n\nconst ViewDetail = ({ recordAdmin, recordUser }: Props) => {\n  const { getListIncomeDetail } = useIncome();\n  const { isAdmin } = usePermission();\n  const user = useRootSelector((state) => state.auth.user);\n\n  const handleViewDetail = () => {\n    if (isAdmin && recordAdmin) {\n      getListIncomeDetail({\n        userId: recordAdmin.applicationUser.id,\n        pageIndex: Pagination.PAGEINDEX,\n        pageSize: Pagination.PAGESIZE,\n      });\n    } else {\n      getListIncomeDetail({\n        userId: user?.id,\n        month: recordUser?.month.toString(),\n        year: recordUser?.year.toString(),\n        pageIndex: Pagination.PAGEINDEX,\n        pageSize: Pagination.PAGESIZE,\n      });\n    }\n  };\n\n  return (\n    <Link\n      style={{\n        textAlign: 'center',\n        display: 'block',\n      }}\n      onClick={handleViewDetail}\n      to=\"/personnel/infor-income/details-view\"\n    >\n      <LocaleFormatter id=\"title.document.detailsView\" />\n    </Link>\n  );\n};\n\nexport default ViewDetail;\n","import { TableProps } from 'antd';\nimport { LocaleFormatter } from '@/components/locale-formatter';\nimport ViewDetail from '../components/view.detail';\n\ntype ColumnsType<T> = TableProps<T>['columns'];\nexport const locationIncomeColumnsUser: ColumnsType<DataIncomTypeWithRoleUserType> = [\n  {\n    title: <LocaleFormatter id=\"title.month\" />,\n    dataIndex: 'month',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.position1\" />,\n    dataIndex: 'oneLocation',\n    render: (_, record) => {\n      return <>{record?.incomeRoles[0]?.income ? record?.incomeRoles[0]?.income : '-'}</>;\n    },\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.position2\" />,\n    dataIndex: 'twoLocation',\n    render: (_, record) => {\n      return <>{record?.incomeRoles[1]?.income ? record?.incomeRoles[1]?.income : '-'}</>;\n    },\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.position3\" />,\n    dataIndex: 'threeLocation',\n    render: (_, record) => {\n      return <>{record?.incomeRoles[2]?.income ? record?.incomeRoles[2]?.income : '-'}</>;\n    },\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.position4\" />,\n    dataIndex: 'fourLocation',\n    render: (_, record) => {\n      return <>{record?.incomeRoles[3]?.income ? record?.incomeRoles[3]?.income : '-'}</>;\n    },\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.position5\" />,\n    dataIndex: 'fiveLocation',\n    render: (_, record) => {\n      return <>{record?.incomeRoles[4]?.income ? record?.incomeRoles[4]?.income : '-'}</>;\n    },\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.otherIncome\" />,\n    dataIndex: 'incomeOther',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.totalIncomeReceived\" />,\n    dataIndex: 'totalIncome',\n  },\n  {\n    title: '',\n    dataIndex: 'detailsView',\n    fixed: 'right',\n    width: '10%',\n    render: (_, record) => <ViewDetail recordUser={record} />,\n  },\n];\n\nexport const locationIncomeColumnsAdmin: ColumnsType<DataIncomTypeWithRoleAdminType> = [\n  {\n    title: <LocaleFormatter id=\"title.column.income.humanResourceCode\" />,\n    dataIndex: ['applicationUser', 'id'],\n  },\n  {\n    title: <LocaleFormatter id=\"title.column.income.fullName\" />,\n    dataIndex: ['applicationUser', 'fullName'],\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.position1\" />,\n    dataIndex: 'oneLocation',\n    render: (_, record) => {\n      return <>{record?.incomeRoles[0]?.income ? record?.incomeRoles[0]?.income : '-'}</>;\n    },\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.position2\" />,\n    dataIndex: 'twoLocation',\n    render: (_, record) => {\n      return <>{record?.incomeRoles[1]?.income ? record?.incomeRoles[1]?.income : '-'}</>;\n    },\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.position3\" />,\n    dataIndex: 'threeLocation',\n    render: (_, record) => {\n      return <>{record?.incomeRoles[2]?.income ? record?.incomeRoles[2]?.income : '-'}</>;\n    },\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.position4\" />,\n    dataIndex: 'fourLocation',\n    render: (_, record) => {\n      return <>{record?.incomeRoles[3]?.income ? record?.incomeRoles[3]?.income : '-'}</>;\n    },\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.position5\" />,\n    dataIndex: 'fiveLocation',\n    render: (_, record) => {\n      return <>{record?.incomeRoles[4]?.income ? record?.incomeRoles[4]?.income : '-'}</>;\n    },\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.otherIncome\" />,\n    dataIndex: 'incomeOther',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.totalIncomeReceived\" />,\n    dataIndex: 'totalIncome',\n  },\n  {\n    title: '',\n    dataIndex: 'detailsView',\n    fixed: 'right',\n    width: '10%',\n    render: (_, record) => <ViewDetail recordAdmin={record} />,\n  },\n];\n","import { TableCustom } from '@/components/table';\nimport {\n  locationIncomeColumnsAdmin,\n  locationIncomeColumnsUser,\n} from './column/location-income.column';\nimport { FilterIncomeType } from '../../services/income.service';\nimport { Pagination } from '@/constants/pagination';\n\ntype Props = {\n  data: DataIncomTypeWithRoleAdminType[] | DataIncomTypeWithRoleUserType[] | undefined;\n  loading: boolean;\n  isAdmin: boolean | undefined;\n  pagination: PaginationAPI | undefined;\n  getListIncomeWithRoleAdmin: (params: FilterIncomeType) => void;\n  getListIncomeWithRoleUser: (params: FilterIncomeType) => void;\n};\n\nexport default function LocationIncomeTable({\n  data,\n  isAdmin,\n  loading,\n  pagination,\n  getListIncomeWithRoleAdmin,\n  getListIncomeWithRoleUser,\n}: Props) {\n  return (\n    <TableCustom\n      columns={isAdmin ? locationIncomeColumnsAdmin : locationIncomeColumnsUser}\n      dataSource={data}\n      loading={loading}\n      rowKey={(record) => record.key}\n      pagination={{\n        current: pagination?.pageIndex,\n        pageSize: Pagination.PAGESIZE,\n        total: pagination?.totalRecords,\n        position: ['bottomCenter'],\n        onChange: (page) => {\n          if (isAdmin) {\n            getListIncomeWithRoleAdmin({\n              pageIndex: page,\n              pageSize: Pagination.PAGESIZE,\n            });\n          } else {\n            getListIncomeWithRoleUser({\n              pageIndex: page,\n              pageSize: Pagination.PAGESIZE,\n            });\n          }\n        },\n      }}\n      scroll={{ x: 1450 }}\n    />\n  );\n}\n","import { TableProps } from 'antd';\nimport { LocaleFormatter } from '@/components/locale-formatter';\ntype ColumnsType<T> = TableProps<T>['columns'];\n\nexport const currentIncomeColumns: ColumnsType<DataIncomeType> = [\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.totalIncomeBeforeTaxes\" />,\n    dataIndex: 'incomeBeforeTax',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.totalIncomeIsNotTaxable\" />,\n    dataIndex: 'incomeNonTax',\n  },\n  {\n    title: (\n      <LocaleFormatter id=\"table.column.currentIncome.totalDeductionDueToFamilyCircumstances\" />\n    ),\n    dataIndex: 'dependent',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.totalSocialInsuranceAmount\" />,\n    dataIndex: 'insurance',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.totalTaxableIncome\" />,\n    dataIndex: 'incomeTax',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.totalTemporaryTaxCollected\" />,\n    dataIndex: 'personalIncomeTax',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.totalIncomeReceived\" />,\n    dataIndex: 'incomeRecevied',\n  },\n];\n\nexport const adminCurrentIncomeColumns: ColumnsType<DataIncomeType> = [\n  {\n    title: <LocaleFormatter id=\"title.column.income.humanResourceCode\" />,\n    dataIndex: ['applicationUser', 'id'],\n  },\n  {\n    title: <LocaleFormatter id=\"title.column.income.fullName\" />,\n    dataIndex: ['applicationUser', 'fullName'],\n  },\n  {\n    title: <LocaleFormatter id=\"title.column.income.position\" />,\n    dataIndex: 'roles',\n    render: (roles: RoleType[]) => roles.map((role) => role.name).join(', '),\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.totalIncomeBeforeTaxes\" />,\n    dataIndex: 'incomeBeforeTax',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.totalIncomeIsNotTaxable\" />,\n    dataIndex: 'incomeNonTax',\n  },\n  {\n    title: (\n      <LocaleFormatter id=\"table.column.currentIncome.totalDeductionDueToFamilyCircumstances\" />\n    ),\n    dataIndex: 'dependent',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.totalSocialInsuranceAmount\" />,\n    dataIndex: 'insurance',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.totalTaxableIncome\" />,\n    dataIndex: 'incomeTax',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.totalTemporaryTaxCollected\" />,\n    dataIndex: 'personalIncomeTax',\n  },\n  {\n    title: <LocaleFormatter id=\"table.column.currentIncome.totalIncomeReceived\" />,\n    dataIndex: 'incomeRecevied',\n  },\n];\n","import { TableCustom } from '@/components/table';\nimport { currentIncomeColumns, adminCurrentIncomeColumns } from './column/current-income.column';\nimport { Pagination } from '@/constants/pagination';\nimport { FilterIncomeType } from '../../services/income.service';\n\ntype Props = {\n  data: DataIncomeType[];\n  loading: boolean;\n  isAdmin: boolean | undefined;\n  pagination: PaginationAPI | undefined;\n  getListIncome: (params: FilterIncomeType) => void;\n};\n\nexport default function CurrentIncomeTable({\n  data,\n  loading,\n  isAdmin,\n  pagination,\n  getListIncome,\n}: Props) {\n  return (\n    <TableCustom\n      columns={isAdmin ? adminCurrentIncomeColumns : currentIncomeColumns}\n      dataSource={data}\n      loading={loading}\n      rowKey={(record) => record.key}\n      pagination={\n        isAdmin\n          ? {\n              current: pagination?.pageIndex,\n              pageSize: Pagination.PAGESIZE,\n              total: pagination?.totalRecords,\n              position: ['bottomCenter'],\n              onChange: (page) => {\n                getListIncome({\n                  pageIndex: page,\n                  pageSize: Pagination.PAGESIZE,\n                });\n              },\n            }\n          : undefined\n      }\n      scroll={{ x: 1450 }}\n    />\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button, Tabs, TabsProps } from 'antd';\nimport { setBreadcrumbItemsAction } from '@/redux/slicers/breadcrumb.slice';\nimport LocationIncomeTable from './location-income';\nimport CurrentIncomeTable from './current-income';\nimport { useLocale } from '@/hooks/locale.hook';\nimport { useIncome } from '../../services/income.service';\nimport { Pagination } from '@/constants/pagination';\nimport { useRootSelector } from '@/hooks/selector.hook';\nimport { usePermission } from '@/hooks/permission.hook';\nimport { useWatchLoading } from '@/hooks/loading.hook';\nimport { Search, SearchParams } from '@/components/search';\nimport { DownloadOutlined } from '@ant-design/icons';\n\nexport default function InformationIncomePage() {\n  const { getListIncome, getListIncomeWithRoleUser, getListIncomeWithRoleAdmin } = useIncome();\n  const { isAdmin } = usePermission();\n  const { formatMessage } = useLocale();\n\n  const [loadingAdmin, loadingInComeWithRoleAdmin, loadingInComeWithRoleUser] = useWatchLoading(\n    ['get-list-income', true],\n    ['get-list-income-with-role-admin', true],\n    ['get-list-income-with-role-user', true],\n  );\n\n  const dispatch = useDispatch();\n\n  const { data, dataRoleAdmin, dataRoleUser, pagination } = useRootSelector(\n    (state) => state.user.income,\n  );\n\n  const [tab, setTab] = useState('1');\n\n  useEffect(() => {\n    const breadCrumbItems = [\n      {\n        title: {\n          vi_VN: 'Nhân sự',\n          en_US: 'Personnel',\n        },\n      },\n      {\n        title: {\n          vi_VN: 'Thông tin thu nhập',\n          en_US: 'Income information',\n        },\n      },\n    ];\n    dispatch(setBreadcrumbItemsAction(breadCrumbItems));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (tab === '1') {\n      getListIncome({\n        pageIndex: Pagination.PAGEINDEX,\n        pageSize: Pagination.PAGESIZE,\n      });\n      return;\n    }\n    if (tab === '2') {\n      if (isAdmin) {\n        getListIncomeWithRoleAdmin({\n          pageIndex: Pagination.PAGEINDEX,\n          pageSize: Pagination.PAGESIZE,\n        });\n      } else {\n        getListIncomeWithRoleUser({\n          pageIndex: Pagination.PAGEINDEX,\n          pageSize: Pagination.PAGESIZE,\n        });\n      }\n      return;\n    }\n  }, [tab]);\n\n  const items: TabsProps['items'] = [\n    {\n      key: '1',\n      label: formatMessage({ id: 'title.document.incomeDuringTheYear' }),\n      children: (\n        <CurrentIncomeTable\n          data={data}\n          loading={loadingAdmin}\n          isAdmin={isAdmin}\n          pagination={pagination}\n          getListIncome={getListIncome}\n        />\n      ),\n    },\n    {\n      key: '2',\n      label: formatMessage({ id: 'title.document.incomeByPosition' }),\n      children: (\n        <LocationIncomeTable\n          data={isAdmin ? dataRoleAdmin : dataRoleUser}\n          isAdmin={isAdmin}\n          loading={isAdmin ? loadingInComeWithRoleAdmin : loadingInComeWithRoleUser}\n          pagination={pagination}\n          getListIncomeWithRoleAdmin={getListIncomeWithRoleAdmin}\n          getListIncomeWithRoleUser={getListIncomeWithRoleUser}\n        />\n      ),\n    },\n  ];\n\n  const handleSearch = ({ textSearch, time }: SearchParams) => {\n    if (tab === '1') {\n      getListIncome({\n        pageIndex: pagination?.pageIndex ?? Pagination.PAGEINDEX,\n        pageSize: Pagination.PAGESIZE,\n        textSearch,\n        time,\n      });\n      return;\n    }\n    if (tab === '2') {\n      if (isAdmin) {\n        getListIncomeWithRoleAdmin({\n          pageIndex: pagination?.pageIndex ?? Pagination.PAGEINDEX,\n          pageSize: Pagination.PAGESIZE,\n          textSearch,\n          time,\n        });\n      } else {\n        getListIncomeWithRoleUser({\n          pageIndex: pagination?.pageIndex ?? Pagination.PAGEINDEX,\n          pageSize: Pagination.PAGESIZE,\n          textSearch,\n          time,\n        });\n      }\n      return;\n    }\n  };\n\n  const onChange = (key: string) => {\n    setTab(key);\n  };\n\n  return (\n    <div>\n      <div\n        style={{\n          display: 'flex',\n          alignItems: ' center',\n          justifyContent: 'space-between',\n        }}\n      >\n        <h3 css={titleStyle}>{formatMessage({ id: 'title.document.inforIncome' })}</h3>\n        {isAdmin && (\n          <Button type=\"primary\" size=\"large\" icon={<DownloadOutlined />}>\n            Import Excel\n          </Button>\n        )}\n      </div>\n      {isAdmin && (\n        <div css={searchContainer}>\n          <Search onSearch={handleSearch} />\n        </div>\n      )}\n      <Tabs defaultActiveKey={tab} items={items} onChange={onChange} />\n    </div>\n  );\n}\n\nconst titleStyle = css`\n  font-size: 1.8rem;\n  line-height: 2rem;\n  font-weight: 500;\n  margin-bottom: 2.4rem;\n  color: #101828;\n`;\n\nconst searchContainer = css`\n  margin: 2.6rem 0;\n`;\n"],"names":["useIncome","api","useApi","caller","useCaller","dispatch","useDispatch","tenant","getTenant","getListIncome","useCallback","pageIndex","Pagination","PAGEINDEX","pageSize","PAGESIZE","textSearch","time","dayjs","year","toString","queryParams","PageIndex","PageSize","TextSearch","Time","urlParams","generateUrlParams","data","succeeded","post","loadingKey","items","totalRecords","totalPages","totalExtend","setListIncomeAction","pagination","getListIncomeWithRoleUser","setListIncomeActionWithRoleUser","getListIncomeWithRoleAdmin","setListIncomeActionWithRoleAdmin","getListIncomeDetail","month","userId","setListIncomeDetail","ViewDetail","recordAdmin","recordUser","isAdmin","usePermission","user","useRootSelector","state","auth","jsx","Link","textAlign","display","handleViewDetail","applicationUser","id","LocaleFormatter","locationIncomeColumnsUser","title","dataIndex","render","_","record","Fragment","incomeRoles","income","fixed","width","locationIncomeColumnsAdmin","LocationIncomeTable","loading","TableCustom","key","current","total","position","onChange","page","x","currentIncomeColumns","adminCurrentIncomeColumns","roles","map","role","name","join","CurrentIncomeTable","undefined","InformationIncomePage","formatMessage","loadingInComeWithRoleAdmin","dataRoleAdmin","setBreadcrumbItemsAction","breadCrumbItems","vi_VN","en_US","useEffect","tab","loadingAdmin","children","dataRoleUser","handleSearch","_EMOTION_STRINGIFIED_CSS_ERROR__","process"],"mappings":"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"}