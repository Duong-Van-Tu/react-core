{"version":3,"file":"index-CMJ8zddt.js","sources":["../../src/modules/users/pages/human-resources/column/index.tsx","../../src/modules/users/services/human-resources.service.ts","../../src/modules/users/pages/human-resources/index.tsx"],"sourcesContent":["import { LocaleFormatter } from '@/components/locale-formatter';\nimport { TableProps } from 'antd';\n\ntype ColumnsType<T> = TableProps<T>['columns'];\n\nexport const usersColumns: ColumnsType<DataUserType> = [\n  {\n    title: <LocaleFormatter id=\"title.column.humanResources.fullName\" />,\n    dataIndex: 'fullName',\n    render: (fullName) => fullName,\n  },\n  {\n    title: <LocaleFormatter id=\"title.column.humanResources.position\" />,\n    dataIndex: 'location',\n    render: (location) => location,\n  },\n  {\n    title: <LocaleFormatter id=\"title.column.humanResources.dob\" />,\n    dataIndex: 'dateBirth',\n    render: (dateBirth) => dateBirth,\n  },\n  {\n    title: <LocaleFormatter id=\"title.column.humanResources.address\" />,\n    dataIndex: 'address',\n    render: (address) => address,\n  },\n  {\n    title: 'Email',\n    dataIndex: 'email',\n    render: (email) => email,\n  },\n  {\n    title: <LocaleFormatter id=\"title.column.humanResources.numberPhone\" />,\n    dataIndex: 'phone',\n    render: (phone) => phone,\n  },\n];\n","import { useApi, useCaller } from '@/hooks/api.hook';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setListHumanResourcesAction } from '../reducers/slicers/human-resources.slice';\nimport { Pagination } from '@/constants/pagination';\nimport { generateUrlParams } from '@/utils/common';\nimport dayjs from 'dayjs';\n\ntype FilterHumanResourcesType = {\n  applicationUserId?: string;\n  pageIndex: number;\n  pageSize: number;\n  textSearch?: string;\n  orderCol?: string;\n  orderDir?: string;\n  code?: string;\n  userId?: string;\n  statusId?: string;\n  roleId?: string;\n  time?: string;\n  roleType?: string;\n  tenant?: string;\n};\n\nexport const useHumanResources = () => {\n  const api = useApi('');\n  const caller = useCaller();\n  const dispatch = useDispatch();\n\n  const getListUsers = useCallback(\n    async ({\n      pageIndex = Pagination.PAGEINDEX,\n      pageSize = Pagination.PAGESIZE,\n      textSearch,\n      time = dayjs().year().toString(),\n    }: FilterHumanResourcesType) => {\n      const queryParams: { [key: string]: string | undefined } = {\n        PageIndex: pageIndex.toString(),\n        PageSize: pageSize.toString(),\n        TextSearch: textSearch,\n        Time: `1-1-${time}`,\n      };\n\n      const urlParams = generateUrlParams(queryParams);\n\n      const { data, succeeded } = await caller(\n        () => api.get(`/ApplicationUsers/get-list-with-pagination?${urlParams}`),\n        {\n          loadingKey: 'get-list-user',\n        },\n      );\n      if (succeeded) {\n        const { items, totalRecords, pageIndex, totalPages, totalExtend } = data;\n        dispatch(\n          setListHumanResourcesAction({\n            data: items,\n            pagination: {\n              pageIndex,\n              totalRecords,\n              totalPages,\n            },\n            totalExtend,\n          }),\n        );\n      }\n    },\n    [caller, api],\n  );\n\n  return {\n    getListUsers,\n  };\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { TableCustom } from '@/components/table';\nimport { setBreadcrumbItemsAction } from '@/redux/slicers/breadcrumb.slice';\nimport { usersColumns } from './column';\nimport { useHumanResources } from '../../services/human-resources.service';\nimport { Pagination } from '@/constants/pagination';\nimport { useRootSelector } from '@/hooks/selector.hook';\nimport { useWatchLoading } from '@/hooks/loading.hook';\nimport { usePermission } from '@/hooks/permission.hook';\nimport { useLocale } from '@/hooks/locale.hook';\nimport { Search, SearchParams } from '@/components/search';\n\nexport default function HumanResourcesPage() {\n  const { formatMessage } = useLocale();\n  const { getListUsers } = useHumanResources();\n  const [loadingAdmin] = useWatchLoading(['get-list-user', true]);\n\n  const { data, pagination } = useRootSelector((state) => state.user.humanResources);\n  const user = useRootSelector((state) => state.auth.user);\n\n  const { isAdmin } = usePermission();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const breadCrumbItems = [\n      {\n        title: {\n          vi_VN: 'Nhân sự',\n          en_US: 'Personnel',\n        },\n      },\n      {\n        title: {\n          vi_VN: 'Thông tin nhân sự',\n          en_US: 'Personnel information',\n        },\n      },\n    ];\n    dispatch(setBreadcrumbItemsAction(breadCrumbItems));\n  }, [dispatch]);\n\n  useEffect(() => {\n    handleGetInfo();\n  }, []);\n\n  const handleGetInfo = () => {\n    if (isAdmin) {\n      getListUsers({\n        pageIndex: Pagination.PAGEINDEX,\n        pageSize: Pagination.PAGESIZE,\n      });\n    }\n  };\n\n  const handleSearch = ({ textSearch, time }: SearchParams) => {\n    getListUsers({\n      pageIndex: pagination?.pageIndex ?? Pagination.PAGEINDEX,\n      pageSize: Pagination.PAGESIZE,\n      textSearch,\n      time,\n    });\n  };\n\n  const handleTableChange = (page: number) => {\n    getListUsers({\n      pageIndex: page,\n      pageSize: Pagination.PAGESIZE,\n    });\n  };\n\n  return (\n    <div>\n      <h3 css={titleStyle}>{formatMessage({ id: 'title.document.inforPersonnel' })}</h3>\n      {isAdmin && (\n        <div css={searchContainer}>\n          <Search onSearch={handleSearch} />\n        </div>\n      )}\n      <TableCustom\n        columns={usersColumns}\n        dataSource={isAdmin ? data : [user]}\n        loading={isAdmin && loadingAdmin}\n        rowKey={(record) => record.id}\n        onTableChange={(page) => handleTableChange(page)}\n        pagination={\n          isAdmin && {\n            current: pagination?.pageIndex,\n            pageSize: Pagination.PAGESIZE,\n            total: pagination?.totalRecords,\n            position: ['bottomCenter'],\n          }\n        }\n        scroll={{ x: 1450 }}\n      />\n    </div>\n  );\n}\n\nconst titleStyle = css`\n  font-size: 1.8rem;\n  line-height: 2rem;\n  font-weight: 500;\n  margin-bottom: 2.4rem;\n  color: #101828;\n`;\n\nconst searchContainer = css`\n  margin: 2.6rem 0;\n`;\n"],"names":["usersColumns","title","jsx","LocaleFormatter","dataIndex","render","fullName","location","dateBirth","address","email","phone","useHumanResources","api","useApi","caller","useCaller","dispatch","useDispatch","getListUsers","useCallback","pageIndex","Pagination","PAGEINDEX","pageSize","PAGESIZE","textSearch","time","dayjs","year","toString","queryParams","PageIndex","PageSize","TextSearch","Time","urlParams","generateUrlParams","data","succeeded","get","loadingKey","items","totalRecords","totalPages","totalExtend","setListHumanResourcesAction","pagination","HumanResourcesPage","formatMessage","useLocale","loadingAdmin","useWatchLoading","useRootSelector","state","user","humanResources","auth","isAdmin","usePermission","useEffect","setBreadcrumbItemsAction","vi_VN","en_US","handleGetInfo","handleSearch","handleTableChange","page","titleStyle","id","searchContainer","Search","TableCustom","record","current","total","position","x","name","styles"],"mappings":"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"}