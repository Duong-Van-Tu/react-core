{"version":3,"file":"index-rgxXuBDt.js","sources":["../../src/modules/category/enum/supplier.enum.ts","../../src/modules/category/services/supplier.service.ts","../../src/modules/category/components/modals/supplier/add-supplier.modal.tsx","../../src/modules/category/components/modals/supplier/delete-supplier.modal.tsx","../../src/modules/category/components/modals/supplier/update-supplier.modal.tsx","../../src/modules/category/components/modals/supplier/index.tsx","../../src/modules/category/components/dropdown/supplier.dropdown.tsx","../../src/modules/category/pages/supplier/column/supplier.column.tsx","../../src/modules/category/pages/supplier/table-supplier.tsx","../../src/modules/category/pages/supplier/index.tsx"],"sourcesContent":["export enum ModalSupplierType {\n  EditSupplier = 'Edit Supplier',\n  DeleteSupplier = 'Delete Supplier',\n  AddSupplier = 'Add Supplier',\n}\n","import { useApi, useCaller } from '@/hooks/api.hook';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  setListSupplierAction,\n  deleteSupplierAction,\n  addSupplierAction,\n  updateSupplierAction,\n} from '../reducers/slicers/supplier.slice';\nimport { useRootSelector } from '@/hooks/selector.hook';\nimport { convertToUppercaseFirstLetter } from '@/utils/get-pathCode';\nimport { Pagination } from '@/constants/pagination';\nimport { generateUrlParams, getTenant } from '@/utils/common';\nimport dayjs from 'dayjs';\n\ntype FilterKPIType = {\n  pageIndex: number;\n  pageSize: number;\n  textSearch?: string;\n  statusId?: string;\n  time?: string;\n  roleType: string;\n};\n\nexport const useSupplier = () => {\n  const api = useApi('');\n  const caller = useCaller();\n  const dispatch = useDispatch();\n  const tenant = getTenant();\n  const user = useRootSelector((state) => state.auth.user);\n\n  const getAllSupplier = useCallback(\n    async ({\n      pageIndex = Pagination.PAGEINDEX,\n      pageSize = Pagination.PAGESIZE,\n      textSearch,\n      statusId,\n      time = dayjs().year().toString(),\n      roleType,\n    }: FilterKPIType) => {\n      const queryParams: { [key: string]: string | undefined } = {\n        PageIndex: pageIndex.toString(),\n        PageSize: pageSize.toString(),\n        UserId: user?.id,\n        RoleId: user?.applicationRoles[0].id,\n        StatusId: statusId,\n        Time: `1-1-${time}`, // value is first day Of year\n        TextSearch: textSearch,\n        tenant: tenant,\n        roleType,\n      };\n\n      const urlParams = generateUrlParams(queryParams);\n\n      const { data, succeeded } = await caller(\n        () => api.post(`/Supplier/get-list-with-pagination?${urlParams}`),\n        {\n          loadingKey: 'get-supplier',\n        },\n      );\n      if (succeeded) {\n        const { items, totalRecords, pageIndex, totalPages, totalExtend } = data;\n        dispatch(\n          setListSupplierAction({\n            data: items,\n            pagination: {\n              pageIndex,\n              totalRecords,\n              totalPages,\n            },\n            totalExtend,\n          }),\n        );\n      }\n    },\n    [caller, api],\n  );\n\n  const addKSupplier = useCallback(\n    async (values: DataSupplierType) => {\n      const dataAddSupplier = convertToUppercaseFirstLetter({ ...values });\n\n      console.log('Payload for API: ', [{ data: dataAddSupplier }]);\n\n      const { data, succeeded } = await caller(\n        () => api.post(`/Supplier/add-or-update?tenant=${tenant}`, [{ data: dataAddSupplier }]),\n        { loadingKey: 'add-supplier' },\n      );\n\n      if (succeeded) {\n        dispatch(addSupplierAction(data[0]));\n        return succeeded;\n      }\n      return false;\n    },\n\n    [api, caller],\n  );\n\n  const deleteSupplier = useCallback(\n    async (supplierIds: string[]) => {\n      const ids = supplierIds.join(',');\n      const ApplicationUserId = `${user?.id}?tenant=${tenant}`;\n      const { succeeded } = await caller(\n        () => api.del(`/Supplier/delete-by-ids/${ids}/${ApplicationUserId}`),\n        { loadingKey: 'delete-supplier' },\n      );\n\n      if (succeeded !== null && succeeded) {\n        dispatch(deleteSupplierAction(supplierIds));\n        return true;\n      }\n      return false;\n    },\n\n    [api, caller],\n  );\n\n  const updateSupplier = useCallback(\n    async (values: DataSupplierType) => {\n      const dataUpdateSupplier = convertToUppercaseFirstLetter({ ...values });\n\n      const { data, succeeded } = await caller(\n        () =>\n          api.post(`/Supplier/add-or-update?tenant=${tenant}`, [\n            { id: values.id, data: dataUpdateSupplier },\n          ]),\n        { loadingKey: 'edit-supplier' },\n      );\n\n      if (succeeded) {\n        dispatch(updateSupplierAction(data[0]));\n        return succeeded;\n      }\n      return false;\n    },\n\n    [api, caller],\n  );\n\n  return { getAllSupplier, deleteSupplier, addKSupplier, updateSupplier };\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Fragment } from 'react';\nimport { Button, Col, Form, FormProps, Input, Row, Space } from 'antd';\nimport { useWatchLoading } from '@/hooks/loading.hook';\nimport { useSupplier } from '@/modules/category/services/supplier.service';\n\ntype FieldType = {\n  code: string;\n  name: string;\n  description: string;\n  review: string;\n};\n\ntype AddSupplierProps = {\n  closeModal: () => void;\n};\n\nexport const AddSupplier = ({ closeModal }: AddSupplierProps) => {\n  const [form] = Form.useForm();\n  const { addKSupplier } = useSupplier();\n  const [loading] = useWatchLoading(['add-supplier', false]);\n\n  const onFinish: FormProps<FieldType>['onFinish'] = async (values) => {\n    const dataAddSupplier = {\n      ...values,\n    };\n    const add = await addKSupplier(dataAddSupplier);\n    if (add) {\n      form.resetFields();\n      closeModal();\n    }\n  };\n\n  const oncancel = () => {\n    closeModal();\n  };\n\n  return (\n    <Fragment>\n      <h3 css={formTitleStyle}>Thêm nhà cung cấp</h3>\n      <Form\n        form={form}\n        css={formAddSuppliertyle}\n        name=\"add-supplier\"\n        onFinish={onFinish}\n        layout=\"vertical\"\n      >\n        <Row gutter={[20, 0]}>\n          <Col span={12}>\n            <Form.Item<FieldType>\n              label={<span css={labelFormItem}>Mã NCC</span>}\n              name=\"code\"\n              rules={[{ required: true, message: 'Vui lòng nhập mã NCC!' }]}\n            >\n              <Input placeholder=\"Nhập mã NCC\" />\n            </Form.Item>\n          </Col>\n          <Col span={12}>\n            <Form.Item<FieldType>\n              label={<span css={labelFormItem}>Tên NCC</span>}\n              name=\"name\"\n              rules={[{ required: true, message: 'Vui lòng nhập tên NCC!' }]}\n            >\n              <Input placeholder=\"Nhập tên NCC\" />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Form.Item<FieldType>\n          label={<span css={labelFormItem}>Mô tả</span>}\n          name=\"description\"\n          rules={[{ required: true, message: 'Vui lòng nhập mô tả!' }]}\n        >\n          <Input placeholder=\"Nhập mô tả\" />\n        </Form.Item>\n\n        <Form.Item<FieldType>\n          label={<span css={labelFormItem}>Đánh giá</span>}\n          name=\"review\"\n          rules={[{ required: true, message: 'Vui lòng nhập đánh giá!' }]}\n        >\n          <Input.TextArea placeholder=\"Nhập đánh giá\" />\n        </Form.Item>\n\n        <Row justify=\"end\">\n          <Space>\n            <Button onClick={oncancel}>Huỷ</Button>\n            <Button loading={loading} type=\"primary\" htmlType=\"submit\">\n              Xác nhận\n            </Button>\n          </Space>\n        </Row>\n      </Form>\n    </Fragment>\n  );\n};\n\nconst formTitleStyle = css`\n  font-weight: 500;\n  font-size: 2rem;\n  line-height: 2.2rem;\n  margin-top: 2rem;\n`;\n\nconst formAddSuppliertyle = css`\n  .ant-form-item-required::before {\n    display: none !important;\n  }\n  margin-top: 2rem;\n  padding: 1rem;\n`;\n\nconst labelFormItem = css`\n  font-size: 1.4rem;\n  line-height: 1.6rem;\n  font-weight: 500;\n`;\n","/** @jsxImportSource @emotion/react */\nimport { useWatchLoading } from '@/hooks/loading.hook';\nimport { useRootSelector } from '@/hooks/selector.hook';\nimport { Pagination } from '@/constants/pagination';\n\nimport { css } from '@emotion/react';\nimport { Button, Row, Space } from 'antd';\nimport { useLocation } from 'react-router-dom';\nimport { useSupplier } from '@/modules/category/services/supplier.service';\ntype DeleteSupplierProps = {\n  closeModal: () => void;\n  data?: DataSupplierType;\n  supplierIds: string[];\n};\nexport const DeleteSupplier = ({ closeModal, supplierIds }: DeleteSupplierProps) => {\n  const { deleteSupplier, getAllSupplier } = useSupplier();\n  const pageIndex = useRootSelector((state) => state.category.supplier.pagination?.pageIndex) ?? 0;\n  const [loading] = useWatchLoading(['delete-supplier', false]);\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const tab = searchParams.get('tab');\n  const handleDeleteSupplier = async () => {\n    const deleteclient = await deleteSupplier(supplierIds);\n    if (deleteclient) {\n      getAllSupplier({\n        pageIndex: pageIndex || 1,\n        pageSize: Pagination.PAGESIZE,\n        roleType: tab!,\n      });\n\n      closeModal();\n    } else {\n      console.error('Failed to delete supplier');\n    }\n  };\n  return (\n    <div css={rootStyle}>\n      <h3 css={titleStyle}>Đồng ý xoá các mục tiêu đã chọn?</h3>\n      <Row justify=\"center\">\n        <Space>\n          <Button onClick={() => closeModal()}>Huỷ</Button>\n          <Button loading={loading} type=\"primary\" danger onClick={handleDeleteSupplier}>\n            Xoá\n          </Button>\n        </Space>\n      </Row>\n    </div>\n  );\n};\n\nconst rootStyle = css`\n  margin-top: 2rem;\n  padding: 0 2rem;\n`;\n\nconst titleStyle = css`\n  font-size: 1.8rem;\n  line-height: 2rem;\n  text-align: center;\n  margin-bottom: 2.4rem;\n  font-weight: 500;\n`;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Fragment, useEffect } from 'react';\nimport { Button, Col, Form, FormProps, Input, Row, Space } from 'antd';\nimport { useWatchLoading } from '@/hooks/loading.hook';\nimport { useSupplier } from '@/modules/category/services/supplier.service';\n\ntype FieldType = {\n  id?: string;\n  code: string;\n  name: string;\n  description: string;\n  review: string;\n};\n\ntype UpdateSupplierProps = {\n  closeModal: () => void;\n  data: DataSupplierType;\n};\n\nexport const UpdateSupplier = ({ closeModal, data }: UpdateSupplierProps) => {\n  const [form] = Form.useForm();\n  const { updateSupplier } = useSupplier();\n  const [loading] = useWatchLoading(['edit-supplier', false]);\n\n  const onFinish: FormProps<FieldType>['onFinish'] = async (values) => {\n    const dataUpdateSupplier = {\n      ...values,\n      id: data.id,\n    };\n    const add = await updateSupplier(dataUpdateSupplier);\n    if (add) {\n      form.resetFields();\n      closeModal();\n    }\n  };\n\n  const oncancel = () => {\n    closeModal();\n  };\n\n  useEffect(() => {\n    form.setFieldsValue(data);\n  }, [data]);\n\n  return (\n    <Fragment>\n      <h3 css={formTitleStyle}>Chỉnh sửa nhà cung cấp</h3>\n      <Form\n        form={form}\n        css={formUpdateSuppliertyle}\n        name=\"add-supplier\"\n        onFinish={onFinish}\n        layout=\"vertical\"\n      >\n        <Row gutter={[20, 0]}>\n          <Col span={12}>\n            <Form.Item<FieldType>\n              label={<span css={labelFormItem}>Mã NCC</span>}\n              name=\"code\"\n              rules={[{ required: true, message: 'Vui lòng nhập mã NCC!' }]}\n            >\n              <Input placeholder=\"Nhập mã NCC\" />\n            </Form.Item>\n          </Col>\n          <Col span={12}>\n            <Form.Item<FieldType>\n              label={<span css={labelFormItem}>Tên NCC</span>}\n              name=\"name\"\n              rules={[{ required: true, message: 'Vui lòng nhập tên NCC!' }]}\n            >\n              <Input placeholder=\"Nhập tên NCC\" />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Form.Item<FieldType>\n          label={<span css={labelFormItem}>Mô tả</span>}\n          name=\"description\"\n          rules={[{ required: true, message: 'Vui lòng nhập mô tả!' }]}\n        >\n          <Input placeholder=\"Nhập mô tả\" />\n        </Form.Item>\n\n        <Form.Item<FieldType>\n          label={<span css={labelFormItem}>Đánh giá</span>}\n          name=\"review\"\n          rules={[{ required: true, message: 'Vui lòng nhập đánh giá!' }]}\n        >\n          <Input.TextArea placeholder=\"Nhập đánh giá\" />\n        </Form.Item>\n\n        <Row justify=\"end\">\n          <Space>\n            <Button onClick={oncancel}>Huỷ</Button>\n            <Button loading={loading} type=\"primary\" htmlType=\"submit\">\n              Xác nhận\n            </Button>\n          </Space>\n        </Row>\n      </Form>\n    </Fragment>\n  );\n};\n\nconst formTitleStyle = css`\n  font-weight: 500;\n  font-size: 2rem;\n  line-height: 2.2rem;\n  margin-top: 2rem;\n`;\n\nconst formUpdateSuppliertyle = css`\n  .ant-form-item-required::before {\n    display: none !important;\n  }\n  margin-top: 2rem;\n  padding: 1rem;\n`;\n\nconst labelFormItem = css`\n  font-size: 1.4rem;\n  line-height: 1.6rem;\n  font-weight: 500;\n`;\n","import { ModalSupplierType } from '@/modules/category/enum/supplier.enum';\nimport { Modal } from 'antd';\nimport { ReactNode, createContext, useContext, useState } from 'react';\nimport { AddSupplier } from './add-supplier.modal';\nimport { DeleteSupplier } from './delete-supplier.modal';\nimport { UpdateSupplier } from './update-supplier.modal';\n\ntype ModalContexttype = {\n  openModal: (modalName: string, data?: DataSupplierType, supplierIds?: string[]) => void;\n  closeModal: () => void;\n};\nconst ModalContext = createContext<ModalContexttype | undefined>(undefined);\n\nexport const useModalSupplier = () => {\n  const context = useContext(ModalContext);\n  if (!context) {\n    throw new Error('useModalSupplier must be used within a ModalSupplierProvider');\n  }\n  return context;\n};\n\ntype ModalSupplierProviderProps = {\n  children?: ReactNode;\n};\n\nexport const ModalSupplierProvider = ({ children }: ModalSupplierProviderProps) => {\n  const [currentModal, setCurrentModal] = useState<\n    { modalName: string; data?: DataSupplierType; supplierIds?: string[] } | undefined\n  >();\n  const [open, setOpen] = useState<boolean>(false);\n\n  const openModal = (modalName: string, data?: DataSupplierType, supplierIds?: string[]) => {\n    setCurrentModal({ modalName, data, supplierIds });\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setCurrentModal(undefined);\n    setOpen(false);\n  };\n\n  return (\n    <ModalContext.Provider value={{ openModal, closeModal }}>\n      {children}\n      <Modal open={open} onCancel={closeModal} footer={null}>\n        {currentModal?.modalName === ModalSupplierType.EditSupplier && (\n          <UpdateSupplier closeModal={closeModal} data={currentModal.data!} />\n        )}\n        {currentModal?.modalName === ModalSupplierType.DeleteSupplier && (\n          <DeleteSupplier\n            closeModal={closeModal}\n            data={currentModal.data!}\n            supplierIds={currentModal.supplierIds!}\n          />\n        )}\n        {currentModal?.modalName === ModalSupplierType.AddSupplier && (\n          <AddSupplier closeModal={closeModal} />\n        )}\n      </Modal>\n    </ModalContext.Provider>\n  );\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Button, Dropdown } from 'antd';\nimport type { MenuProps } from 'antd';\nimport { CustomIcon } from '@/components/icons';\nimport { useLocale } from '@/hooks/locale.hook';\nimport { ModalSupplierType } from '../../enum/supplier.enum';\nimport { useModalSupplier } from '../modals/supplier';\n\nenum MenuItem {\n  EditSupplier = 1,\n}\n\ntype SupplierDropdownProps = {\n  data?: DataSupplierType;\n};\n\nexport function SupplierDropdown({ data }: SupplierDropdownProps) {\n  const { openModal } = useModalSupplier();\n  const { formatMessage } = useLocale();\n\n  const handleItemClick = (key: number) => {\n    switch (key) {\n      case MenuItem.EditSupplier:\n        openModal(ModalSupplierType.EditSupplier, data);\n        break;\n      default:\n        break;\n    }\n  };\n  const items: MenuProps['items'] = [\n    {\n      key: '1',\n      label: <span>{formatMessage({ id: 'dropdown.edit' })}</span>,\n      onClick: () => handleItemClick(MenuItem.EditSupplier),\n    },\n  ];\n\n  return (\n    <Dropdown menu={{ items }} placement=\"bottomRight\">\n      <Button css={actionIconBtn}>\n        <CustomIcon type=\"three-dot\" width={16} height={18} />\n      </Button>\n    </Dropdown>\n  );\n}\n\nconst actionIconBtn = css`\n  background: none;\n  border: none;\n  box-shadow: unset;\n  padding: 0;\n`;\n","import { TableProps } from 'antd';\nimport { LocaleFormatter } from '@/components/locale-formatter';\n\nimport { SupplierDropdown } from '@/modules/category/components/dropdown/supplier.dropdown';\n\ntype ColumnsType<T> = TableProps<T>['columns'];\nexport const supplierColumns: ColumnsType<DataSupplierType> = [\n  {\n    title: <LocaleFormatter id=\"table.column.supplierCode\" />,\n    dataIndex: 'code',\n    render: (code) => code,\n  },\n\n  {\n    title: <LocaleFormatter id=\"table.column.supplierFullName\" />,\n    dataIndex: 'name',\n    render: (name) => name,\n  },\n\n  {\n    title: <LocaleFormatter id=\"table.column.supplierDesc\" />,\n    dataIndex: 'description',\n    render: (description) => description,\n  },\n\n  {\n    title: <LocaleFormatter id=\"table.column.supplierReview\" />,\n    dataIndex: 'review',\n    render: (review) => review,\n  },\n\n  {\n    title: '',\n    dataIndex: 'calculationMethod',\n    fixed: 'right',\n    width: '6%',\n    render: (__, record) => <SupplierDropdown data={record} />,\n  },\n];\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { TableCustom } from '@/components/table';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Button } from 'antd';\nimport { Search, SearchParams } from '@/components/search';\nimport { CustomIcon } from '@/components/icons';\nimport { useWatchLoading } from '@/hooks/loading.hook';\nimport { Key } from 'antd/es/table/interface';\nimport { Pagination } from '@/constants/pagination';\nimport { useModalSupplier } from '../../components/modals/supplier';\nimport { supplierColumns } from './column/supplier.column';\nimport { useRootSelector } from '@/hooks/selector.hook';\nimport { useSupplier } from '../../services/supplier.service';\n\nexport default function TableSupplier() {\n  const [supplierIds, setSupplierIds] = useState<string[]>();\n  const { openModal } = useModalSupplier();\n  const { getAllSupplier } = useSupplier();\n  const [loading] = useWatchLoading(['get-supplier', true]);\n  const { data, pagination } = useRootSelector((state) => state.category.supplier);\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const tab = searchParams.get('tab');\n  const handleSearch = ({ textSearch, time }: SearchParams) => {\n    getAllSupplier({\n      pageIndex: pagination?.pageIndex ?? Pagination.PAGEINDEX,\n      pageSize: Pagination.PAGESIZE,\n      textSearch,\n      time,\n      roleType: tab!,\n    });\n  };\n\n  const handleTableChange = (page: number) => {\n    getAllSupplier({\n      pageIndex: page,\n      pageSize: Pagination.PAGESIZE,\n      roleType: tab!,\n    });\n  };\n\n  const rowSelection = {\n    onChange: (_selectedRowKeys: Key[], selectedRows: DataSupplierType[]) => {\n      setSupplierIds(selectedRows.map((row) => row.id!));\n    },\n  };\n\n  const handleDeleteSupplier = () => {\n    openModal('Delete Supplier', undefined, supplierIds);\n  };\n\n  useEffect(() => {\n    getAllSupplier({\n      pageIndex: Pagination.PAGEINDEX,\n      pageSize: Pagination.PAGESIZE,\n      roleType: tab!,\n    });\n  }, [getAllSupplier, tab]);\n\n  return (\n    <div css={rootStyle}>\n      <Button\n        onClick={() => openModal('Add Supplier')}\n        type=\"primary\"\n        css={addKCustomerStyle}\n        iconPosition=\"start\"\n        size=\"large\"\n      >\n        <CustomIcon color=\"#fff\" width={16} height={16} type=\"circle-plus\" />\n        <span>Thêm nhà cung cấp</span>\n      </Button>\n\n      <div css={searchContainer}>\n        <Search onSearch={handleSearch} />\n      </div>\n      <div css={checkBoxStyle}>\n        <Button disabled={!supplierIds} onClick={() => handleDeleteSupplier()} size=\"large\" danger>\n          Xoá mục tiêu đã chọn\n        </Button>\n      </div>\n      <TableCustom\n        rowSelection={rowSelection}\n        columns={supplierColumns}\n        dataSource={data}\n        loading={loading}\n        rowKey={(record) => record.id}\n        onTableChange={(page) => handleTableChange(page)}\n        pagination={{\n          current: pagination?.pageIndex,\n          pageSize: Pagination.PAGESIZE,\n          total: pagination?.totalRecords,\n          position: ['bottomCenter'],\n        }}\n        scroll={{ x: 1450 }}\n      />\n    </div>\n  );\n}\n\nconst rootStyle = css`\n  position: relative;\n`;\n\nconst addKCustomerStyle = css`\n  position: absolute;\n  right: 0;\n  top: -9rem;\n  background: #0070b8;\n  display: flex;\n  align-items: center;\n  gap: 0.2rem;\n  &:hover {\n    background: #0070b8 !important;\n    opacity: 0.9;\n  }\n`;\n\nconst searchContainer = css`\n  margin-top: 2.6rem;\n`;\n\nconst checkBoxStyle = css`\n  margin: 1.1rem 0;\n`;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useEffect } from 'react';\nimport { setBreadcrumbItemsAction } from '@/redux/slicers/breadcrumb.slice';\nimport { useDispatch } from 'react-redux';\nimport { ModalSupplierProvider } from '../../components/modals/supplier';\nimport { CustomIcon } from '@/components/icons';\nimport TableSupplier from './table-supplier';\nexport default function SupplierPage() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const breadCrumbItems = [\n      {\n        title: {\n          vi_VN: 'Danh mục',\n          en_US: 'Category',\n        },\n      },\n      {\n        title: {\n          vi_VN: 'Nhà cung cấp',\n          en_US: 'Supplier',\n        },\n      },\n    ];\n    dispatch(setBreadcrumbItemsAction(breadCrumbItems));\n  }, [dispatch]);\n  return (\n    <ModalSupplierProvider>\n      <h3 css={titleStyle}>Nhà cung cấp</h3>\n      <div css={subTitleStyle}>\n        <CustomIcon width={8} height={8} type=\"dot\" />\n        <span>\n          <span css={subTitleStyle}>10 nhà cung cấp</span>\n        </span>\n      </div>\n      <TableSupplier />\n    </ModalSupplierProvider>\n  );\n}\n\nconst titleStyle = css`\n  font-size: 2.4rem;\n  line-height: 2.8rem;\n  font-weight: 600;\n  color: rgba(16, 24, 40, 1);\n  margin-bottom: 0.5rem;\n`;\nconst subTitleStyle = css`\n  font-size: 1.2rem;\n  font-weight: 500;\n  line-height: 1.8rem;\n  color: rgba(84, 104, 129, 1);\n`;\n"],"names":["ModalSupplierType","EditSupplier","DeleteSupplier","AddSupplier","useSupplier","api","useApi","caller","useCaller","dispatch","useDispatch","tenant","getTenant","user","useRootSelector","state","auth","getAllSupplier","useCallback","pageIndex","Pagination","PAGEINDEX","pageSize","PAGESIZE","textSearch","statusId","time","dayjs","year","toString","roleType","queryParams","PageIndex","PageSize","UserId","id","RoleId","applicationRoles","StatusId","Time","TextSearch","urlParams","generateUrlParams","data","succeeded","post","loadingKey","items","totalRecords","totalPages","totalExtend","setListSupplierAction","pagination","addKSupplier","values","dataAddSupplier","convertToUppercaseFirstLetter","log","addSupplierAction","deleteSupplier","supplierIds","ids","join","ApplicationUserId","del","deleteSupplierAction","updateSupplier","dataUpdateSupplier","updateSupplierAction","Input","add","loading","useWatchLoading","onFinish","form","oncancel","Fragment","jsx","formTitleStyle","message","Form","formAddSuppliertyle","process","jsxs","Row","_EMOTION_STRINGIFIED_CSS_ERROR__","labelFormItem","closeModal","location","useLocation","searchParams","rootStyle","titleStyle","Space","Button","NODE_ENV","deleteclient","console","styles","map","useEffect","formUpdateSuppliertyle","ModalContext","createContext","context","ModalSupplierProvider","children","currentModal","setCurrentModal","useState","setOpen","modalName","openModal","MenuItem","formatMessage","handleItemClick","key","label","actionIconBtn","CustomIcon","supplierColumns","title","LocaleFormatter","dataIndex","render","code","name","description","review","fixed","width","__","record","SupplierDropdown","TableSupplier","setSupplierIds","URLSearchParams","tab","handleTableChange","page","_selectedRowKeys","selectedRows","row","current","position","searchContainer","TableCustom","rowSelection","SupplierPage","setBreadcrumbItemsAction","vi_VN","en_US","subTitleStyle"],"mappings":"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"}